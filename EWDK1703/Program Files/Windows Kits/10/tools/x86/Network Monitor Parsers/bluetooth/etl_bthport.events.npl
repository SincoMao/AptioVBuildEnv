//#  (c) 2009 Microsoft Corporation
//#
//#  Title:                  Microsoft-Windows-etwTracing
//#
//#  Details:                
//#
//#  Public References:      etwTracing.man
//#
//#  Comments:               
//#
//#  Revision Class and Date:Minor, 2/12/2013
//#
//####
[RegisterBefore(NetEvent.UserData, MicrosoftWindowsBTHBTHPORT, "{8A1F9517-3A8C-4a9e-A018-4F17A200F277}")]
Protocol BTHPORT_MicrosoftWindowsBTHBTHPORT = property.ETLSummary
{
	[BuildConversationWithParent, conversation.ConversationDescription = ""]
	switch(property.EventID)
	{
		case 1: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_GENERIC EVENT_HCI_COMMAND_GENERIC;
		case 2: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_INQUIRY EVENT_HCI_COMMAND_INQUIRY;
		case 3: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_INQUIRY_CANCEL EVENT_HCI_COMMAND_INQUIRY_CANCEL;
		case 4: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_PERIODIC_INQUIRY_MODE EVENT_HCI_COMMAND_PERIODIC_INQUIRY_MODE;
		case 5: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_EXIT_PERIODIC_INQUIRY_MODE EVENT_HCI_COMMAND_EXIT_PERIODIC_INQUIRY_MODE;
		case 6: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_CREATE_CONNECTION EVENT_HCI_COMMAND_CREATE_CONNECTION;
		case 7: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_DISCONNECT EVENT_HCI_COMMAND_DISCONNECT;
		case 8: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_ACCEPT_CONNECTION_REQUEST EVENT_HCI_COMMAND_ACCEPT_CONNECTION_REQUEST;
		case 9: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_REJECT_CONNECTION_REQUEST EVENT_HCI_COMMAND_REJECT_CONNECTION_REQUEST;
		case 10: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LINK_KEY_REQUEST_REPLY EVENT_HCI_COMMAND_LINK_KEY_REQUEST_REPLY;
		case 11: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LINK_KEY_REQUEST_NEGATIVE_REPLY EVENT_HCI_COMMAND_LINK_KEY_REQUEST_NEGATIVE_REPLY;
		case 12: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_PIN_CODE_REQUEST_REPLY EVENT_HCI_COMMAND_PIN_CODE_REQUEST_REPLY;
		case 13: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_PIN_CODE_REQUEST_NEGATIVE_REPLY EVENT_HCI_COMMAND_PIN_CODE_REQUEST_NEGATIVE_REPLY;
		case 14: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_CHANGE_CONNECTION_PACKET_TYPE EVENT_HCI_COMMAND_CHANGE_CONNECTION_PACKET_TYPE;
		case 15: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_AUTHENTICATION_REQUESTED EVENT_HCI_COMMAND_AUTHENTICATION_REQUESTED;
		case 16: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SET_CONNECTION_ENCRYPTION EVENT_HCI_COMMAND_SET_CONNECTION_ENCRYPTION;
		case 17: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_CHANGE_CONNECTION_LINK_KEY EVENT_HCI_COMMAND_CHANGE_CONNECTION_LINK_KEY;
		case 18: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_MASTER_LINK_KEY EVENT_HCI_COMMAND_MASTER_LINK_KEY;
		case 19: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_REMOTE_NAME_REQUEST EVENT_HCI_COMMAND_REMOTE_NAME_REQUEST;
		case 20: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_REMOTE_NAME_REQUEST_CANCEL EVENT_HCI_COMMAND_REMOTE_NAME_REQUEST_CANCEL;
		case 21: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_REMOTE_SUPPORTED_FEATURES EVENT_HCI_COMMAND_READ_REMOTE_SUPPORTED_FEATURES;
		case 22: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_REMOTE_EXTENDED_FEATURES EVENT_HCI_COMMAND_READ_REMOTE_EXTENDED_FEATURES;
		case 23: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_REMOTE_VERSION_INFORMATION EVENT_HCI_COMMAND_READ_REMOTE_VERSION_INFORMATION;
		case 24: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_CLOCK_OFFSET EVENT_HCI_COMMAND_READ_CLOCK_OFFSET;
		case 25: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_IO_CAPABILITY_RESPONSE EVENT_HCI_COMMAND_IO_CAPABILITY_RESPONSE;
		case 26: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_USER_CONFIRMATION_REQUEST_REPLY EVENT_HCI_COMMAND_USER_CONFIRMATION_REQUEST_REPLY;
		case 27: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY EVENT_HCI_COMMAND_USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY;
		case 28: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_USER_PASSKEY_REQUEST_REPLY EVENT_HCI_COMMAND_USER_PASSKEY_REQUEST_REPLY;
		case 29: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_USER_PASSKEY_REQUEST_NEGATIVE_REPLY EVENT_HCI_COMMAND_USER_PASSKEY_REQUEST_NEGATIVE_REPLY;
		case 30: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_REMOTE_OOB_DATA_REQUEST_REPLY EVENT_HCI_COMMAND_REMOTE_OOB_DATA_REQUEST_REPLY;
		case 31: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY EVENT_HCI_COMMAND_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY;
		case 32: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_IO_CAPABILITY_NEGATIVE_RESPONSE EVENT_HCI_COMMAND_IO_CAPABILITY_NEGATIVE_RESPONSE;
		case 33: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_HOLD_MODE EVENT_HCI_COMMAND_HOLD_MODE;
		case 34: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SNIFF_MODE EVENT_HCI_COMMAND_SNIFF_MODE;
		case 35: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_EXIT_SNIFF_MODE EVENT_HCI_COMMAND_EXIT_SNIFF_MODE;
		case 36: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_PARK_MODE EVENT_HCI_COMMAND_PARK_MODE;
		case 37: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_EXIT_PARK_MODE EVENT_HCI_COMMAND_EXIT_PARK_MODE;
		case 38: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_QOS_SETUP EVENT_HCI_COMMAND_QOS_SETUP;
		case 39: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_ROLE_DISCOVERY EVENT_HCI_COMMAND_ROLE_DISCOVERY;
		case 40: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SWITCH_ROLE EVENT_HCI_COMMAND_SWITCH_ROLE;
		case 41: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LINK_POLICY_SETTINGS EVENT_HCI_COMMAND_READ_LINK_POLICY_SETTINGS;
		case 42: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_LINK_POLICY_SETTINGS EVENT_HCI_COMMAND_WRITE_LINK_POLICY_SETTINGS;
		case 43: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SNIFF_SUBRATING EVENT_HCI_COMMAND_SNIFF_SUBRATING;
		case 44: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SET_EVENT_MASK EVENT_HCI_COMMAND_SET_EVENT_MASK;
		case 45: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_RESET EVENT_HCI_COMMAND_RESET;
		case 46: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SET_EVENT_FILTER EVENT_HCI_COMMAND_SET_EVENT_FILTER;
		case 47: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_FLUSH EVENT_HCI_COMMAND_FLUSH;
		case 48: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_PIN_TYPE EVENT_HCI_COMMAND_READ_PIN_TYPE;
		case 49: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_PIN_TYPE EVENT_HCI_COMMAND_WRITE_PIN_TYPE;
		case 50: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_CREATE_NEW_UNIT_KEY EVENT_HCI_COMMAND_CREATE_NEW_UNIT_KEY;
		case 51: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_STORED_LINK_KEY EVENT_HCI_COMMAND_READ_STORED_LINK_KEY;
		case 52: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_STORED_LINK_KEY EVENT_HCI_COMMAND_WRITE_STORED_LINK_KEY;
		case 53: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_DELETE_STORED_LINK_KEY EVENT_HCI_COMMAND_DELETE_STORED_LINK_KEY;
		case 54: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_CHANGE_LOCAL_NAME EVENT_HCI_COMMAND_CHANGE_LOCAL_NAME;
		case 55: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_NAME EVENT_HCI_COMMAND_READ_LOCAL_NAME;
		case 56: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_CONNECTION_ACCEPT_TIMEOUT EVENT_HCI_COMMAND_READ_CONNECTION_ACCEPT_TIMEOUT;
		case 57: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_CONNECTION_ACCEPT_TIMEOUT EVENT_HCI_COMMAND_WRITE_CONNECTION_ACCEPT_TIMEOUT;
		case 58: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_TIMEOUT EVENT_HCI_COMMAND_READ_PAGE_TIMEOUT;
		case 59: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_TIMEOUT EVENT_HCI_COMMAND_WRITE_PAGE_TIMEOUT;
		case 60: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_SCAN_ENABLE EVENT_HCI_COMMAND_READ_SCAN_ENABLE;
		case 61: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_SCAN_ENABLE EVENT_HCI_COMMAND_WRITE_SCAN_ENABLE;
		case 62: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_ACTIVITY EVENT_HCI_COMMAND_READ_PAGE_SCAN_ACTIVITY;
		case 63: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_ACTIVITY EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_ACTIVITY;
		case 64: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_SCAN_ACTIVITY EVENT_HCI_COMMAND_READ_INQUIRY_SCAN_ACTIVITY;
		case 65: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_SCAN_ACTIVITY EVENT_HCI_COMMAND_WRITE_INQUIRY_SCAN_ACTIVITY;
		case 66: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_AUTHENTICATION_ENABLE EVENT_HCI_COMMAND_READ_AUTHENTICATION_ENABLE;
		case 67: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_AUTHENTICATION_ENABLE EVENT_HCI_COMMAND_WRITE_AUTHENTICATION_ENABLE;
		case 68: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_ENCRYPTION_MODE EVENT_HCI_COMMAND_READ_ENCRYPTION_MODE;
		case 69: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_ENCRYPTION_MODE EVENT_HCI_COMMAND_WRITE_ENCRYPTION_MODE;
		case 70: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_CLASS_OF_DEVICE EVENT_HCI_COMMAND_READ_CLASS_OF_DEVICE;
		case 71: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_CLASS_OF_DEVICE EVENT_HCI_COMMAND_WRITE_CLASS_OF_DEVICE;
		case 72: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_VOICE_SETTING EVENT_HCI_COMMAND_READ_VOICE_SETTING;
		case 73: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_VOICE_SETTING EVENT_HCI_COMMAND_WRITE_VOICE_SETTING;
		case 74: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_AUTOMATIC_FLUSH_TIMEOUT EVENT_HCI_COMMAND_READ_AUTOMATIC_FLUSH_TIMEOUT;
		case 75: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_AUTOMATIC_FLUSH_TIMEOUT EVENT_HCI_COMMAND_WRITE_AUTOMATIC_FLUSH_TIMEOUT;
		case 76: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_NUM_BROADCAST_RETRANSMISSIONS EVENT_HCI_COMMAND_READ_NUM_BROADCAST_RETRANSMISSIONS;
		case 77: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_NUM_BROADCAST_RETRANSMISSIONS EVENT_HCI_COMMAND_WRITE_NUM_BROADCAST_RETRANSMISSIONS;
		case 78: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_HOLD_MODE_ACTIVITY EVENT_HCI_COMMAND_READ_HOLD_MODE_ACTIVITY;
		case 79: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_HOLD_MODE_ACTIVITY EVENT_HCI_COMMAND_WRITE_HOLD_MODE_ACTIVITY;
		case 80: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_TRANSMIT_POWER_LEVEL EVENT_HCI_COMMAND_READ_TRANSMIT_POWER_LEVEL;
		case 81: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SET_HOST_CONTROLLER_TO_HOST_FLOW_CONTROL EVENT_HCI_COMMAND_SET_HOST_CONTROLLER_TO_HOST_FLOW_CONTROL;
		case 82: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_HOST_BUFFER_SIZE EVENT_HCI_COMMAND_HOST_BUFFER_SIZE;
		case 83: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_HOST_NUMBER_OF_COMPLETED_PACKETS EVENT_HCI_COMMAND_HOST_NUMBER_OF_COMPLETED_PACKETS;
		case 84: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LINK_SUPERVISION_TIMEOUT EVENT_HCI_COMMAND_READ_LINK_SUPERVISION_TIMEOUT;
		case 85: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_LINK_SUPERVISION_TIMEOUT EVENT_HCI_COMMAND_WRITE_LINK_SUPERVISION_TIMEOUT;
		case 86: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_NUMBER_OF_SUPPORTED_IAC EVENT_HCI_COMMAND_READ_NUMBER_OF_SUPPORTED_IAC;
		case 87: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_CURRENT_IAC_LAP EVENT_HCI_COMMAND_READ_CURRENT_IAC_LAP;
		case 88: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_CURRENT_IAC_LAP EVENT_HCI_COMMAND_WRITE_CURRENT_IAC_LAP;
		case 89: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_PERIOD_MODE EVENT_HCI_COMMAND_READ_PAGE_SCAN_PERIOD_MODE;
		case 90: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_PERIOD_MODE EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_PERIOD_MODE;
		case 91: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_MODE EVENT_HCI_COMMAND_READ_PAGE_SCAN_MODE;
		case 92: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_MODE EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_MODE;
		case 93: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SET_AFH_HOST_CHANNEL_CLASSIFICATION EVENT_HCI_COMMAND_SET_AFH_HOST_CHANNEL_CLASSIFICATION;
		case 94: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_SCAN_TYPE EVENT_HCI_COMMAND_READ_INQUIRY_SCAN_TYPE;
		case 95: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_SCAN_TYPE EVENT_HCI_COMMAND_WRITE_INQUIRY_SCAN_TYPE;
		case 96: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_MODE EVENT_HCI_COMMAND_READ_INQUIRY_MODE;
		case 97: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_MODE EVENT_HCI_COMMAND_WRITE_INQUIRY_MODE;
		case 98: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_TYPE EVENT_HCI_COMMAND_READ_PAGE_SCAN_TYPE;
		case 99: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_TYPE EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_TYPE;
		case 100: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_EXTENDED_INQUIRY_RESPONSE EVENT_HCI_COMMAND_READ_EXTENDED_INQUIRY_RESPONSE;
		case 101: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_EXTENDED_INQUIRY_RESPONSE EVENT_HCI_COMMAND_WRITE_EXTENDED_INQUIRY_RESPONSE;
		case 102: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_SIMPLE_PAIRING_MODE EVENT_HCI_COMMAND_READ_SIMPLE_PAIRING_MODE;
		case 103: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_SIMPLE_PAIRING_MODE EVENT_HCI_COMMAND_WRITE_SIMPLE_PAIRING_MODE;
		case 104: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_OOB_DATA EVENT_HCI_COMMAND_READ_OOB_DATA;
		case 105: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL EVENT_HCI_COMMAND_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL;
		case 106: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL EVENT_HCI_COMMAND_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL;
		case 107: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_ENHANCED_FLUSH EVENT_HCI_COMMAND_ENHANCED_FLUSH;
		case 108: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_SEND_KEYPRESS_NOTIFICATION EVENT_HCI_COMMAND_SEND_KEYPRESS_NOTIFICATION;
		case 109: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_VERSION_INFORMATION EVENT_HCI_COMMAND_READ_LOCAL_VERSION_INFORMATION;
		case 110: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_SUPPORTED_COMMANDS EVENT_HCI_COMMAND_READ_LOCAL_SUPPORTED_COMMANDS;
		case 111: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_SUPPORTED_FEATURES EVENT_HCI_COMMAND_READ_LOCAL_SUPPORTED_FEATURES;
		case 112: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_BUFFER_SIZE EVENT_HCI_COMMAND_READ_BUFFER_SIZE;
		case 113: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_COUNTRY_CODE EVENT_HCI_COMMAND_READ_COUNTRY_CODE;
		case 114: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_BD_ADDR EVENT_HCI_COMMAND_READ_BD_ADDR;
		case 115: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_FAILED_CONTACT_COUNTER EVENT_HCI_COMMAND_READ_FAILED_CONTACT_COUNTER;
		case 116: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_RESET_FAILED_CONTACT_COUNTER EVENT_HCI_COMMAND_RESET_FAILED_CONTACT_COUNTER;
		case 117: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_GET_LINK_QUALITY EVENT_HCI_COMMAND_GET_LINK_QUALITY;
		case 118: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_RSSI EVENT_HCI_COMMAND_READ_RSSI;
		case 119: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LOOPBACK_MODE EVENT_HCI_COMMAND_READ_LOOPBACK_MODE;
		case 120: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_LOOPBACK_MODE EVENT_HCI_COMMAND_WRITE_LOOPBACK_MODE;
		case 121: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_ENABLE_DEVICE_UNDER_TEST_MODE EVENT_HCI_COMMAND_ENABLE_DEVICE_UNDER_TEST_MODE;
		case 122: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_SIMPLE_PAIRING_DEBUG_MODE EVENT_HCI_COMMAND_WRITE_SIMPLE_PAIRING_DEBUG_MODE;
		case 268: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_READ_LE_HOST_SUPPORT EVENT_HCI_COMMAND_READ_LE_HOST_SUPPORT;
		case 269: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_WRITE_LE_HOST_SUPPORT EVENT_HCI_COMMAND_WRITE_LE_HOST_SUPPORT;
		case 270: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_EVENT_MASK EVENT_HCI_COMMAND_LE_SET_EVENT_MASK;
		case 271: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_READ_BUFFER_SIZE EVENT_HCI_COMMAND_LE_READ_BUFFER_SIZE;
		case 272: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_READ_LOCAL_SUPPORTED_FEATURES EVENT_HCI_COMMAND_LE_READ_LOCAL_SUPPORTED_FEATURES;
		case 273: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_RANDOM_ADDRESS EVENT_HCI_COMMAND_LE_SET_RANDOM_ADDRESS;
		case 274: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_ADVERTISING_PARAMETER EVENT_HCI_COMMAND_LE_SET_ADVERTISING_PARAMETER;
		case 275: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_READ_ADVERTISING_CHANNEL_TX_POWER EVENT_HCI_COMMAND_LE_READ_ADVERTISING_CHANNEL_TX_POWER;
		case 276: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_ADVERTISING_DATA EVENT_HCI_COMMAND_LE_SET_ADVERTISING_DATA;
		case 277: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_SCAN_RESPONSE_DATA EVENT_HCI_COMMAND_LE_SET_SCAN_RESPONSE_DATA;
		case 278: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_ADVERTISE_ENABLE EVENT_HCI_COMMAND_LE_SET_ADVERTISE_ENABLE;
		case 279: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_SCAN_PARAMETER EVENT_HCI_COMMAND_LE_SET_SCAN_PARAMETER;
		case 280: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_SCAN_ENABLE EVENT_HCI_COMMAND_LE_SET_SCAN_ENABLE;
		case 281: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_CREATE_CONNECTION EVENT_HCI_COMMAND_LE_CREATE_CONNECTION;
		case 282: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_CREATE_CONNECTION_CANCEL EVENT_HCI_COMMAND_LE_CREATE_CONNECTION_CANCEL;
		case 283: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_READ_WHITE_LIST_SIZE EVENT_HCI_COMMAND_LE_READ_WHITE_LIST_SIZE;
		case 284: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_CLEAR_WHITE_LIST EVENT_HCI_COMMAND_LE_CLEAR_WHITE_LIST;
		case 285: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_ADD_DEVICE_TO_WHITE_LIST EVENT_HCI_COMMAND_LE_ADD_DEVICE_TO_WHITE_LIST;
		case 286: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_REMOVE_DEVICE_FROM_WHITE_LIST EVENT_HCI_COMMAND_LE_REMOVE_DEVICE_FROM_WHITE_LIST;
		case 287: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_CONNECTION_UPDATE EVENT_HCI_COMMAND_LE_CONNECTION_UPDATE;
		case 288: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_SET_HOST_CHANNEL_CLASSIFICATION EVENT_HCI_COMMAND_LE_SET_HOST_CHANNEL_CLASSIFICATION;
		case 289: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_READ_CHANNEL_MAP EVENT_HCI_COMMAND_LE_READ_CHANNEL_MAP;
		case 290: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_READ_REMOTE_USED_FEATURES EVENT_HCI_COMMAND_LE_READ_REMOTE_USED_FEATURES;
		case 291: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_ENCRYPT EVENT_HCI_COMMAND_LE_ENCRYPT;
		case 292: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_RAND EVENT_HCI_COMMAND_LE_RAND;
		case 293: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_START_ENCRYPTION EVENT_HCI_COMMAND_LE_START_ENCRYPTION;
		case 294: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_LONG_TERM_KEY_REQUEST_REPLY EVENT_HCI_COMMAND_LE_LONG_TERM_KEY_REQUEST_REPLY;
		case 295: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_LONG_TERM_KEY_REQUEST_NEGATIVE_REPLY EVENT_HCI_COMMAND_LE_LONG_TERM_KEY_REQUEST_NEGATIVE_REPLY;
		case 296: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_READ_SUPPORTED_STATES EVENT_HCI_COMMAND_LE_READ_SUPPORTED_STATES;
		case 297: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_RECEIVER_TEST EVENT_HCI_COMMAND_LE_RECEIVER_TEST;
		case 298: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_TRANSMITTER_TEST EVENT_HCI_COMMAND_LE_TRANSMITTER_TEST;
		case 299: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_COMMAND_LE_TEST_END EVENT_HCI_COMMAND_LE_TEST_END;
		case 123: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_GENERIC EVENT_HCI_EVENT_GENERIC;
		case 124: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_INQUIRYCOMPLETE EVENT_HCI_EVENT_INQUIRYCOMPLETE;
		case 125: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_INQUIRYRESULT EVENT_HCI_EVENT_INQUIRYRESULT;
		case 126: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_CONNECTIONCOMPLETE EVENT_HCI_EVENT_CONNECTIONCOMPLETE;
		case 127: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_CONNECTIONREQUEST EVENT_HCI_EVENT_CONNECTIONREQUEST;
		case 128: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_DISCONNECTIONCOMPLETE EVENT_HCI_EVENT_DISCONNECTIONCOMPLETE;
		case 129: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_AUTHENTICATIONCOMPLETE EVENT_HCI_EVENT_AUTHENTICATIONCOMPLETE;
		case 130: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_REMOTENAMEREQUESTCOMPLETE EVENT_HCI_EVENT_REMOTENAMEREQUESTCOMPLETE;
		case 131: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_ENCRYPTIONCHANGE EVENT_HCI_EVENT_ENCRYPTIONCHANGE;
		case 132: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_CHANGECONNECTIONLINKKEYCOMPLETE EVENT_HCI_EVENT_CHANGECONNECTIONLINKKEYCOMPLETE;
		case 133: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_MASTERLINKKEYCOMPLETE EVENT_HCI_EVENT_MASTERLINKKEYCOMPLETE;
		case 134: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_READREMOTESUPPORTEDFEATURESCOMPLETE EVENT_HCI_EVENT_READREMOTESUPPORTEDFEATURESCOMPLETE;
		case 135: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_READREMOTEVERSIONINFORMATIONCOMPLETE EVENT_HCI_EVENT_READREMOTEVERSIONINFORMATIONCOMPLETE;
		case 136: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_QOSSETUPCOMPLETE EVENT_HCI_EVENT_QOSSETUPCOMPLETE;
		case 137: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_COMMANDCOMPLETENOSTATUS EVENT_HCI_EVENT_COMMANDCOMPLETENOSTATUS;
		case 138: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_COMMANDCOMPLETE EVENT_HCI_EVENT_COMMANDCOMPLETE;
		case 139: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_COMMANDSTATUS EVENT_HCI_EVENT_COMMANDSTATUS;
		case 140: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_HARDWAREERROR EVENT_HCI_EVENT_HARDWAREERROR;
		case 141: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_FLUSHOCCURED EVENT_HCI_EVENT_FLUSHOCCURED;
		case 142: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_ROLECHANGE EVENT_HCI_EVENT_ROLECHANGE;
		case 143: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_NUMBEROFCOMPLETEDPACKETS EVENT_HCI_EVENT_NUMBEROFCOMPLETEDPACKETS;
		case 144: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_MODECHANGE EVENT_HCI_EVENT_MODECHANGE;
		case 145: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_RETURNLINKKEYS EVENT_HCI_EVENT_RETURNLINKKEYS;
		case 146: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_PINCODEREQUEST EVENT_HCI_EVENT_PINCODEREQUEST;
		case 147: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LINKKEYREQUEST EVENT_HCI_EVENT_LINKKEYREQUEST;
		case 148: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LINKKEYNOTIFICATION EVENT_HCI_EVENT_LINKKEYNOTIFICATION;
		case 149: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LOOPBACKCOMMAND EVENT_HCI_EVENT_LOOPBACKCOMMAND;
		case 150: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_DATABUFFEROVERFLOW EVENT_HCI_EVENT_DATABUFFEROVERFLOW;
		case 151: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_MAXSLOTSCHANGE EVENT_HCI_EVENT_MAXSLOTSCHANGE;
		case 152: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_READCLOCKOFFSETCOMPLETE EVENT_HCI_EVENT_READCLOCKOFFSETCOMPLETE;
		case 153: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_CONNECTIONPACKETTYPECHANGED EVENT_HCI_EVENT_CONNECTIONPACKETTYPECHANGED;
		case 154: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_QOSVIOLATION EVENT_HCI_EVENT_QOSVIOLATION;
		case 155: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_PAGESCANMODECHANGE EVENT_HCI_EVENT_PAGESCANMODECHANGE;
		case 156: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_PAGESCANREPETITIONMODECHANGE EVENT_HCI_EVENT_PAGESCANREPETITIONMODECHANGE;
		case 157: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_INQUIRYRESULTWITHRSSI EVENT_HCI_EVENT_INQUIRYRESULTWITHRSSI;
		case 158: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_READREMOTEEXTENDEDFEATURESCOMPLETE EVENT_HCI_EVENT_READREMOTEEXTENDEDFEATURESCOMPLETE;
		case 159: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_SYNCHRONOUSCONNECTIONCOMPLETE EVENT_HCI_EVENT_SYNCHRONOUSCONNECTIONCOMPLETE;
		case 160: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_SYNCHRONOUSCONNECTIONCHANGED EVENT_HCI_EVENT_SYNCHRONOUSCONNECTIONCHANGED;
		case 161: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_ENHANCEDFLUSHCOMPLETE EVENT_HCI_EVENT_ENHANCEDFLUSHCOMPLETE;
		case 162: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_HCISNIFFSUBRATING EVENT_HCI_EVENT_HCISNIFFSUBRATING;
		case 163: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_EXTENDEDINQUIRYRESULT EVENT_HCI_EVENT_EXTENDEDINQUIRYRESULT;
		case 164: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_IOCAPABILITYREQUEST EVENT_HCI_EVENT_IOCAPABILITYREQUEST;
		case 165: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_IOCAPABILITYRESPONSE EVENT_HCI_EVENT_IOCAPABILITYRESPONSE;
		case 166: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_USERCONFIRMATIONREQUEST EVENT_HCI_EVENT_USERCONFIRMATIONREQUEST;
		case 167: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_USERPASSKEYREQUEST EVENT_HCI_EVENT_USERPASSKEYREQUEST;
		case 168: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_REMOTEOOBDATAREQUEST EVENT_HCI_EVENT_REMOTEOOBDATAREQUEST;
		case 169: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_SIMPLEPAIRINGCOMPLETE EVENT_HCI_EVENT_SIMPLEPAIRINGCOMPLETE;
		case 170: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LINKSUPERVISIONTIMEOUTCHANGED EVENT_HCI_EVENT_LINKSUPERVISIONTIMEOUTCHANGED;
		case 171: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_USERPASSKEYNOTIFICATION EVENT_HCI_EVENT_USERPASSKEYNOTIFICATION;
		case 172: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_KEYPRESSNOTIFICATION EVENT_HCI_EVENT_KEYPRESSNOTIFICATION;
		case 173: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_REMOTEHOSTSUPPORTEDFEATURESNOTIFICATION EVENT_HCI_EVENT_REMOTEHOSTSUPPORTEDFEATURESNOTIFICATION;
		case 174: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LEMETAEVENT EVENT_HCI_EVENT_LEMETAEVENT;
		case 304: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LECONNECTIONCOMPLETE EVENT_HCI_EVENT_LECONNECTIONCOMPLETE;
		case 305: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LECONNECTIONUPDATECOMPLETE EVENT_HCI_EVENT_LECONNECTIONUPDATECOMPLETE;
		case 306: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_EVENT_LEREADREMOTEUSEDFEATURESCOMPLETE EVENT_HCI_EVENT_LEREADREMOTEUSEDFEATURESCOMPLETE;
		case 175: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CX_EVENT_GENERIC EVENT_HCI_CX_EVENT_GENERIC;
		case 176: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_RNR_CANCEL EVENT_HCI_CC_EVENT_RNR_CANCEL;
		case 177: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_REQUEST_REPLY EVENT_HCI_CC_EVENT_REQUEST_REPLY;
		case 178: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_LINK_POLICY_SETTINGS EVENT_HCI_CC_EVENT_READ_LINK_POLICY_SETTINGS;
		case 179: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_WRITE_LINK_POLICY_SETTINGS EVENT_HCI_CC_EVENT_WRITE_LINK_POLICY_SETTINGS;
		case 259: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_SNIFF_SUBRATING EVENT_HCI_CC_EVENT_SNIFF_SUBRATING;
		case 260: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_FLUSH EVENT_HCI_CC_EVENT_FLUSH;
		case 180: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_PIN_TYPE EVENT_HCI_CC_EVENT_READ_PIN_TYPE;
		case 181: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_STORED_LINK_KEY EVENT_HCI_CC_EVENT_READ_STORED_LINK_KEY;
		case 182: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_WRITE_STORED_LINK_KEY EVENT_HCI_CC_EVENT_WRITE_STORED_LINK_KEY;
		case 183: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_DELETE_STORED_LINK_KEY EVENT_HCI_CC_EVENT_DELETE_STORED_LINK_KEY;
		case 184: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_NAME EVENT_HCI_CC_EVENT_READ_LOCAL_NAME;
		case 185: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_TIMEOUT EVENT_HCI_CC_EVENT_READ_TIMEOUT;
		case 186: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_ENABLE EVENT_HCI_CC_EVENT_READ_ENABLE;
		case 187: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_SCAN_ACTIVITY EVENT_HCI_CC_EVENT_READ_SCAN_ACTIVITY;
		case 188: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_ENCRYPTION_MODE EVENT_HCI_CC_EVENT_ENCRYPTION_MODE;
		case 189: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_COD EVENT_HCI_CC_EVENT_READ_COD;
		case 190: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_VOICE_SETTING EVENT_HCI_CC_EVENT_READ_VOICE_SETTING;
		case 191: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_AUTOMATIC_FLUSH_TIMEOUT EVENT_HCI_CC_EVENT_READ_AUTOMATIC_FLUSH_TIMEOUT;
		case 192: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_WRITE_AUTOMATIC_FLUSH_TIMEOUT EVENT_HCI_CC_EVENT_WRITE_AUTOMATIC_FLUSH_TIMEOUT;
		case 193: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_NUM_BROADCAST_RETRANSMISSIONS EVENT_HCI_CC_EVENT_READ_NUM_BROADCAST_RETRANSMISSIONS;
		case 194: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_HOLD_MODE_ACTIVITY EVENT_HCI_CC_EVENT_READ_HOLD_MODE_ACTIVITY;
		case 195: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_TRANSMIT_POWER_LEVEL EVENT_HCI_CC_EVENT_READ_TRANSMIT_POWER_LEVEL;
		case 196: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_LINK_SUPERVISION_TIMEOUT EVENT_HCI_CC_EVENT_READ_LINK_SUPERVISION_TIMEOUT;
		case 197: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_WRITE_LINK_SUPERVISION_TIMEOUT EVENT_HCI_CC_EVENT_WRITE_LINK_SUPERVISION_TIMEOUT;
		case 198: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_NUMBER_OF_SUPPORTED_IAC EVENT_HCI_CC_EVENT_READ_NUMBER_OF_SUPPORTED_IAC;
		case 199: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_CURRENT_IAC_LAP EVENT_HCI_CC_EVENT_READ_CURRENT_IAC_LAP;
		case 200: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_MODE EVENT_HCI_CC_EVENT_READ_MODE;
		case 201: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_SCAN_TYPE EVENT_HCI_CC_EVENT_READ_SCAN_TYPE;
		case 202: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_EIR EVENT_HCI_CC_EVENT_READ_EIR;
		case 203: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_VERSION_INFORMATION EVENT_HCI_CC_EVENT_READ_LOCAL_VERSION_INFORMATION;
		case 204: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_SUPPORTED_COMMANDS EVENT_HCI_CC_EVENT_READ_LOCAL_SUPPORTED_COMMANDS;
		case 205: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_SUPPORTED_FEATURES EVENT_HCI_CC_EVENT_READ_LOCAL_SUPPORTED_FEATURES;
		case 206: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_BUFFER_SIZE EVENT_HCI_CC_EVENT_READ_BUFFER_SIZE;
		case 207: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_COUNTRY_CODE EVENT_HCI_CC_EVENT_READ_COUNTRY_CODE;
		case 208: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_BD_ADDR EVENT_HCI_CC_EVENT_READ_BD_ADDR;
		case 209: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_FAILED_CONTACT_COUNTER EVENT_HCI_CC_EVENT_READ_FAILED_CONTACT_COUNTER;
		case 210: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_RESET_FAILED_CONTACT_COUNTER EVENT_HCI_CC_EVENT_READ_RESET_FAILED_CONTACT_COUNTER;
		case 211: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_GET_LINK_QUALITY EVENT_HCI_CC_EVENT_GET_LINK_QUALITY;
		case 212: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_RSSI EVENT_HCI_CC_EVENT_READ_RSSI;
		case 213: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_IO_CAPABILITY_RESPONSE EVENT_HCI_CC_EVENT_IO_CAPABILITY_RESPONSE;
		case 214: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_OOB_DATA EVENT_HCI_CC_EVENT_READ_OOB_DATA;
		case 215: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL EVENT_HCI_CC_EVENT_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL;
		case 216: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_SEND_KEYPRESS_NOTIFICATION EVENT_HCI_CC_EVENT_SEND_KEYPRESS_NOTIFICATION;
		case 217: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_VENDOR_SPECIFIC_COMMAND EVENT_HCI_CC_EVENT_VENDOR_SPECIFIC_COMMAND;
		case 218: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_READ_BUFFER_SIZE EVENT_HCI_CC_LE_READ_BUFFER_SIZE;
		case 219: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_READ_ADVERTISING_CHANNEL_TX_POWER EVENT_HCI_CC_LE_READ_ADVERTISING_CHANNEL_TX_POWER;
		case 220: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_READ_WHITE_LIST_SIZE EVENT_HCI_CC_LE_READ_WHITE_LIST_SIZE;
		case 221: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_READ_CHANNEL_MAP EVENT_HCI_CC_LE_READ_CHANNEL_MAP;
		case 222: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_ENCRYPT EVENT_HCI_CC_LE_ENCRYPT;
		case 223: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_RAND EVENT_HCI_CC_LE_RAND;
		case 224: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_REQUEST_REPLY EVENT_HCI_CC_LE_REQUEST_REPLY;
		case 225: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_READ_SUPPORTED_STATES EVENT_HCI_CC_LE_READ_SUPPORTED_STATES;
		case 226: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_TEST_END EVENT_HCI_CC_LE_TEST_END;
		case 300: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_LE_LONG_TERM_KEY_REQUEST_REPLY EVENT_HCI_CC_LE_LONG_TERM_KEY_REQUEST_REPLY;
		case 301: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_READ_LE_HOST_SUPPORT EVENT_HCI_CC_EVENT_READ_LE_HOST_SUPPORT;
		case 303: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_CC_EVENT_ROLE_DISCOVERY EVENT_HCI_CC_EVENT_ROLE_DISCOVERY;
		case 227: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_REJECT EVENT_L2CAP_SIGNAL_REJECT;
		case 228: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_CONNECT_REQUEST EVENT_L2CAP_SIGNAL_CONNECT_REQUEST;
		case 229: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_CONNECT_RESPONSE EVENT_L2CAP_SIGNAL_CONNECT_RESPONSE;
		case 230: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_CONFIG_REQUEST EVENT_L2CAP_SIGNAL_CONFIG_REQUEST;
		case 231: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_CONFIG_RESPONSE EVENT_L2CAP_SIGNAL_CONFIG_RESPONSE;
		case 232: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_DISCONNECT_REQUEST EVENT_L2CAP_SIGNAL_DISCONNECT_REQUEST;
		case 233: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_DISCONNECT_RESPONSE EVENT_L2CAP_SIGNAL_DISCONNECT_RESPONSE;
		case 234: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_ECHO_REQUEST EVENT_L2CAP_SIGNAL_ECHO_REQUEST;
		case 235: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_ECHO_RESPONSE EVENT_L2CAP_SIGNAL_ECHO_RESPONSE;
		case 236: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_INFO_REQUEST EVENT_L2CAP_SIGNAL_INFO_REQUEST;
		case 237: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_SIGNAL_INFO_RESPONSE EVENT_L2CAP_SIGNAL_INFO_RESPONSE;
		case 238: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_GET_LOCAL_BD_ADDR EVENT_BRB_GET_LOCAL_BD_ADDR;
		case 239: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_GET_LOCAL_SIGNAL_PARAMETERS EVENT_BRB_GET_LOCAL_SIGNAL_PARAMETERS;
		case 240: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_GET_DEVICE_INTERFACE_STRING EVENT_BRB_GET_DEVICE_INTERFACE_STRING;
		case 241: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_STORED_LINK_KEY EVENT_BRB_STORED_LINK_KEY;
		case 242: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_REGISTER_SERVER EVENT_BRB_L2CA_REGISTER_SERVER;
		case 243: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_UNREGISTER_SERVER EVENT_BRB_L2CA_UNREGISTER_SERVER;
		case 244: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_OPEN_CHANNEL EVENT_BRB_L2CA_OPEN_CHANNEL;
		case 245: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_CLOSE_CHANNEL EVENT_BRB_L2CA_CLOSE_CHANNEL;
		case 246: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_UPDATE_CHANNEL EVENT_BRB_L2CA_UPDATE_CHANNEL;
		case 247: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_ACL_TRANSFER EVENT_BRB_L2CA_ACL_TRANSFER;
		case 248: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_CHANNEL_PROPERTY EVENT_BRB_L2CA_CHANNEL_PROPERTY;
		case 249: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_PING EVENT_BRB_L2CA_PING;
		case 250: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_INFO_REQUEST EVENT_BRB_L2CA_INFO_REQUEST;
		case 251: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_PSM EVENT_BRB_PSM;
		case 252: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_ACL_GET_MODE EVENT_BRB_ACL_GET_MODE;
		case 253: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_ACL_ENTER_ACTIVE_MODE EVENT_BRB_ACL_ENTER_ACTIVE_MODE;
		case 254: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_ACL_ENTER_SNIFF_MODE EVENT_BRB_ACL_ENTER_SNIFF_MODE;
		case 255: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_ACL_ENTER_PARK_MODE EVENT_BRB_ACL_ENTER_PARK_MODE;
		case 256: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_ACL_ENTER_HOLD_MODE EVENT_BRB_ACL_ENTER_HOLD_MODE;
		case 257: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_ACL_ENHANCED_FLUSH EVENT_BRB_ACL_ENHANCED_FLUSH;
		case 265: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_REGISTER_FIXED_CHANNEL_SERVER EVENT_BRB_L2CA_REGISTER_FIXED_CHANNEL_SERVER;
		case 266: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_UNREGISTER_FIXED_CHANNEL_SERVER EVENT_BRB_L2CA_UNREGISTER_FIXED_CHANNEL_SERVER;
		case 267: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_SEND_FIXED_CHANNEL_DATA EVENT_BRB_L2CA_SEND_FIXED_CHANNEL_DATA;
		case 302: [property.ETLSummary = this.ToString] BTHPORT_EVENT_BRB_L2CA_CONNECT_FIXED_CHANNEL EVENT_BRB_L2CA_CONNECT_FIXED_CHANNEL;
		case 258: [property.ETLSummary = this.ToString] BTHPORT_EVENT_L2CAP_IRP_COMPLETE EVENT_L2CAP_IRP_COMPLETE;
		case 261: [property.ETLSummary = this.ToString] BTHPORT_EVENT_TIE_ACTIVITY_ID EVENT_TIE_ACTIVITY_ID;
		case 262: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_ACL_SEGMENT EVENT_HCI_ACL_SEGMENT;
		case 263: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_ACL_WRITE EVENT_HCI_ACL_WRITE;
		case 264: [property.ETLSummary = this.ToString] BTHPORT_EVENT_HCI_ACL_READ EVENT_HCI_ACL_READ;
		case 310: [property.ETLSummary = this.ToString] BTHPORT_EVENT_QUERY_RADIO_STATE EVENT_QUERY_RADIO_STATE;
		case 311: [property.ETLSummary = this.ToString] BTHPORT_EVENT_SET_RADIO_STATE_START EVENT_SET_RADIO_STATE_START;
		case 312: [property.ETLSummary = this.ToString] BTHPORT_EVENT_SET_RADIO_STATE_STOP EVENT_SET_RADIO_STATE_STOP;
		case 313: [property.ETLSummary = this.ToString] BTHPORT_EVENT_SET_DEVICE_POWER_STATE_START EVENT_SET_DEVICE_POWER_STATE_START;
		case 314: [property.ETLSummary = this.ToString] BTHPORT_EVENT_SET_DEVICE_POWER_STATE_STOP EVENT_SET_DEVICE_POWER_STATE_STOP;
		default: [property.ETLSummary = "Not exist EventID"]struct{};
	}
}
Table BTHPORT_ACL_Mode(value)
{
	switch(value)
	{
		case 0: "ACL_MODE_ACTIVE";
		case 1: "ACL_MODE_HOLD";
		case 2: "ACL_MODE_SNIFF";
		case 3: "ACL_MODE_PARK";
		case 4: "ACL_MODE_ENTER_ACTIVE";
		case 5: "ACL_MODE_ENTER_HOLD";
		case 6: "ACL_MODE_ENTER_SNIFF";
		case 7: "ACL_MODE_ENTER_PARK";
		case 8: "ACL_DISCONNECTED";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table BTHPORT_HCI_Sent_Status(value)
{
	switch(value)
	{
		case 0: "Sending packet to radio";
		case 1: "Packet received from radio";
		case 2: "Packet timed out";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table BTHPORT_L2CAP_Sent_Status(value)
{
	switch(value)
	{
		case 0: "L2CAP received a packet";
		case 1: "L2CAP is completing a packet";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table BTHPORT_BTH_RADIO_STATE(value)
{
	switch(value)
	{
		case 0: "Radio State Unknown";
		case 1: "Radio On Pending";
		case 2: "Radio On";
		case 3: "Radio Off Pending";
		case 4: "Radio Off";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table BTHPORT_DEVICE_POWER_STATE(value)
{
	switch(value)
	{
		case 0: "Unspecified";
		case 1: "D0";
		case 2: "D1";
		case 3: "D2";
		case 4: "D3";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Table BTHPORT_SYSTEM_POWER_STATE(value)
{
	switch(value)
	{
		case 0: "Unspecified";
		case 1: "S0";
		case 2: "S1";
		case 3: "S2";
		case 4: "S3";
		case 5: "S4-Hibernate";
		case 6: "S5-Shutdown";
		case 7: "S6";
		default:
			FormatString("Unknown value: %d", value);
	}
}
Struct BTHPORT_EVENT_HCI_COMMAND_GENERIC = FormatString("HCI_CMD_GENERIC")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Parameter[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_INQUIRY = FormatString("HCI_CMD_INQUIRY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 LAP[3];
	UINT8 Inquiry_Length;
	UINT8 Num_Responses;
}
Struct BTHPORT_EVENT_HCI_COMMAND_INQUIRY_CANCEL = FormatString("HCI_CMD_INQUIRY_CANCEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_PERIODIC_INQUIRY_MODE = FormatString("HCI_CMD_PERIODIC_INQUIRY_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Max_Period_Length;
	UINT16 Min_Period_Length;
	UINT8 LAP[3];
	UINT8 Inquiry_Length;
	UINT8 Num_Responses;
}
Struct BTHPORT_EVENT_HCI_COMMAND_EXIT_PERIODIC_INQUIRY_MODE = FormatString("HCI_CMD_EXIT_PERIODIC_INQUIRY_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_CREATE_CONNECTION = FormatString("HCI_CMD_CREATE_CONNECTION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT16 Packet_Type;
	UINT8 Page_Scan_Repetition_Mode;
	UINT8 Reserved;
	UINT16 Clock_Offset;
	UINT8 Allow_Role_Switch;
}
Struct BTHPORT_EVENT_HCI_COMMAND_DISCONNECT = FormatString("HCI_CMD_DISCONNECT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT8 Reason;
}
Struct BTHPORT_EVENT_HCI_COMMAND_ACCEPT_CONNECTION_REQUEST = FormatString("HCI_CMD_ACCEPT_CONNECTION_REQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Role;
}
Struct BTHPORT_EVENT_HCI_COMMAND_REJECT_CONNECTION_REQUEST = FormatString("HCI_CMD_REJECT_CONNECTION_REQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Reason;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LINK_KEY_REQUEST_REPLY = FormatString("HCI_CMD_LINK_KEY_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Link_Key[16];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LINK_KEY_REQUEST_NEGATIVE_REPLY = FormatString("HCI_CMD_LINK_KEY_REQUEST_NEGATIVE_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_PIN_CODE_REQUEST_REPLY = FormatString("HCI_CMD_PIN_CODE_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 PIN_Code_Length;
	UINT8 PIN_Code[16];
}
Struct BTHPORT_EVENT_HCI_COMMAND_PIN_CODE_REQUEST_NEGATIVE_REPLY = FormatString("HCI_CMD_PIN_CODE_REQUEST_NEGATIVE_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_CHANGE_CONNECTION_PACKET_TYPE = FormatString("HCI_CMD_CHANGE_CONNECTION_PACKET_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Packet_Type;
}
Struct BTHPORT_EVENT_HCI_COMMAND_AUTHENTICATION_REQUESTED = FormatString("HCI_CMD_AUTHENTICATION_REQUESTED")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SET_CONNECTION_ENCRYPTION = FormatString("HCI_CMD_SET_CONNECTION_ENCRYPTION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT8 Encryption_Enable;
}
Struct BTHPORT_EVENT_HCI_COMMAND_CHANGE_CONNECTION_LINK_KEY = FormatString("HCI_CMD_CHANGE_CONNECTION_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_MASTER_LINK_KEY = FormatString("HCI_CMD_MASTER_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Key_Flag[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_REMOTE_NAME_REQUEST = FormatString("HCI_CMD_REMOTE_NAME_REQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Page_Scan_Repetition_Mode;
	UINT8 Reserved;
	UINT16 Clock_Offset;
}
Struct BTHPORT_EVENT_HCI_COMMAND_REMOTE_NAME_REQUEST_CANCEL = FormatString("HCI_CMD_REMOTE_NAME_REQUEST_CANCEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_REMOTE_SUPPORTED_FEATURES = FormatString("HCI_CMD_READ_REMOTE_SUPPORTED_FEATURES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_REMOTE_EXTENDED_FEATURES = FormatString("HCI_CMD_READ_REMOTE_EXTENDED_FEATURES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT8 Page_Number;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_REMOTE_VERSION_INFORMATION = FormatString("HCI_CMD_READ_REMOTE_VERSION_INFORMATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_CLOCK_OFFSET = FormatString("HCI_CMD_READ_CLOCK_OFFSET")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_IO_CAPABILITY_RESPONSE = FormatString("HCI_CMD_IO_CAPABILITY_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 IO_Capability;
	UINT8 OOB_Data_Present;
	UINT8 Authentication_Requirements;
}
Struct BTHPORT_EVENT_HCI_COMMAND_USER_CONFIRMATION_REQUEST_REPLY = FormatString("HCI_CMD_USER_CONFIRMATION_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY = FormatString("HCI_CMD_USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_USER_PASSKEY_REQUEST_REPLY = FormatString("HCI_CMD_USER_PASSKEY_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT32 Numeric_Value;
}
Struct BTHPORT_EVENT_HCI_COMMAND_USER_PASSKEY_REQUEST_NEGATIVE_REPLY = FormatString("HCI_CMD_USER_PASSKEY_REQUEST_NEGATIVE_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_REMOTE_OOB_DATA_REQUEST_REPLY = FormatString("HCI_CMD_REMOTE_OOB_DATA_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 C[16];
	UINT8 R[16];
}
Struct BTHPORT_EVENT_HCI_COMMAND_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY = FormatString("HCI_CMD_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_IO_CAPABILITY_NEGATIVE_RESPONSE = FormatString("HCI_CMD_IO_CAPABILITY_NEGATIVE_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Reason;
}
Struct BTHPORT_EVENT_HCI_COMMAND_HOLD_MODE = FormatString("HCI_CMD_HOLD_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Hold_Mode_Max_Interval;
	UINT16 Hold_Mode_Min_Interval;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SNIFF_MODE = FormatString("HCI_CMD_SNIFF_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Sniff_Max_Interval;
	UINT16 Sniff_Min_Interval;
	UINT16 Sniff_Attempt;
	UINT16 Sniff_Timeout;
}
Struct BTHPORT_EVENT_HCI_COMMAND_EXIT_SNIFF_MODE = FormatString("HCI_CMD_EXIT_SNIFF_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_PARK_MODE = FormatString("HCI_CMD_PARK_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Beacon_Max_Interval;
	UINT16 Beacon_Min_Interval;
}
Struct BTHPORT_EVENT_HCI_COMMAND_EXIT_PARK_MODE = FormatString("HCI_CMD_EXIT_PARK_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_QOS_SETUP = FormatString("HCI_CMD_QOS_SETUP")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT8 Flags;
	UINT8 Service_Type;
	UINT32 Token_Rate;
	UINT32 Peak_Bandwidth;
	UINT32 Latency;
	UINT32 Delay_Variation;
}
Struct BTHPORT_EVENT_HCI_COMMAND_ROLE_DISCOVERY = FormatString("HCI_CMD_ROLE_DISCOVERY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SWITCH_ROLE = FormatString("HCI_CMD_SWITCH_ROLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Role;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LINK_POLICY_SETTINGS = FormatString("HCI_CMD_READ_LINK_POLICY_SETTINGS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_LINK_POLICY_SETTINGS = FormatString("HCI_CMD_WRITE_LINK_POLICY_SETTINGS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Link_Policy_Settings;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SNIFF_SUBRATING = FormatString("HCI_CMD_SNIFF_SUBRATING")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Maximum_Latency;
	UINT16 Minimum_Remote_Timeout;
	UINT16 Minimum_Local_Timeout;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SET_EVENT_MASK = FormatString("HCI_CMD_SET_EVENT_MASK")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT64 Event_Mask;
}
Struct BTHPORT_EVENT_HCI_COMMAND_RESET = FormatString("HCI_CMD_RESET")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SET_EVENT_FILTER = FormatString("HCI_CMD_SET_EVENT_FILTER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Filter_Type;
	UINT8 Filter_Condition_Type;
	UINT8 Condition_Auto_Accept_Flag;
	UINT8 Condition_Class_Of_Device[3];
	UINT8 Condition_Class_Of_Device_Mask[3];
	UINT32 Condition_SAP;
	UINT32 Condition_NAP;
	UINT32 Condition_Address_SAP;
	UINT32 Condition_Address_NAP;
	UINT8 Condition_Address_Auto_Accept_Flag;
	UINT8 Condition_COD_Class_Of_Device[3];
	UINT8 Condition_COD_Class_Of_Device_Mask[3];
	UINT8 Condition_COD_Auto_Accept_Flag;
}
Struct BTHPORT_EVENT_HCI_COMMAND_FLUSH = FormatString("HCI_CMD_FLUSH")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_PIN_TYPE = FormatString("HCI_CMD_READ_PIN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_PIN_TYPE = FormatString("HCI_CMD_WRITE_PIN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 PIN_Type[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_CREATE_NEW_UNIT_KEY = FormatString("HCI_CMD_CREATE_NEW_UNIT_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_STORED_LINK_KEY = FormatString("HCI_CMD_READ_STORED_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Read_All_Flag;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_STORED_LINK_KEY = FormatString("HCI_CMD_WRITE_STORED_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Num_Keys_To_Write;
	BTHPORT_Link_Key_Write_Stored_Link_Key Link_Key_Write_Stored_Link_Key[Num_Keys_To_Write]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_COMMAND_DELETE_STORED_LINK_KEY = FormatString("HCI_CMD_DELETE_STORED_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Delete_All_Flags;
}
Struct BTHPORT_EVENT_HCI_COMMAND_CHANGE_LOCAL_NAME = FormatString("HCI_CMD_CHANGE_LOCAL_NAME")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	AsciiString(248) Name;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_NAME = FormatString("HCI_CMD_READ_LOCAL_NAME")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_CONNECTION_ACCEPT_TIMEOUT = FormatString("HCI_CMD_READ_CONNECTION_ACCEPT_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_CONNECTION_ACCEPT_TIMEOUT = FormatString("HCI_CMD_WRITE_CONNECTION_ACCEPT_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Conn_Accept_Timeout;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_TIMEOUT = FormatString("HCI_CMD_READ_PAGE_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_TIMEOUT = FormatString("HCI_CMD_WRITE_PAGE_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Page_Timeout;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_SCAN_ENABLE = FormatString("HCI_CMD_READ_SCAN_ENABLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_SCAN_ENABLE = FormatString("HCI_CMD_WRITE_SCAN_ENABLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Scan_Enable[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_ACTIVITY = FormatString("HCI_CMD_READ_PAGE_SCAN_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_ACTIVITY = FormatString("HCI_CMD_WRITE_PAGE_SCAN_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Page_Scan_Interval;
	UINT16 Page_Scan_Window;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_SCAN_ACTIVITY = FormatString("HCI_CMD_READ_INQUIRY_SCAN_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_SCAN_ACTIVITY = FormatString("HCI_CMD_WRITE_INQUIRY_SCAN_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Inquiry_Scan_Interval;
	UINT16 Inquiry_Scan_Window;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_AUTHENTICATION_ENABLE = FormatString("HCI_CMD_READ_AUTHENTICATION_ENABLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_AUTHENTICATION_ENABLE = FormatString("HCI_CMD_WRITE_AUTHENTICATION_ENABLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Authentication_Enable[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_ENCRYPTION_MODE = FormatString("HCI_CMD_READ_ENCRYPTION_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_ENCRYPTION_MODE = FormatString("HCI_CMD_WRITE_ENCRYPTION_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Encryption_Mode[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_CLASS_OF_DEVICE = FormatString("HCI_CMD_READ_CLASS_OF_DEVICE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_CLASS_OF_DEVICE = FormatString("HCI_CMD_WRITE_CLASS_OF_DEVICE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Class_of_Device[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_VOICE_SETTING = FormatString("HCI_CMD_READ_VOICE_SETTING")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_VOICE_SETTING = FormatString("HCI_CMD_WRITE_VOICE_SETTING")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Voice_Setting;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_AUTOMATIC_FLUSH_TIMEOUT = FormatString("HCI_CMD_READ_AUTOMATIC_FLUSH_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_AUTOMATIC_FLUSH_TIMEOUT = FormatString("HCI_CMD_WRITE_AUTOMATIC_FLUSH_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Automatic_Flush_Timeout;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_NUM_BROADCAST_RETRANSMISSIONS = FormatString("HCI_CMD_READ_NUM_BROADCAST_RETRANSMISSIONS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_NUM_BROADCAST_RETRANSMISSIONS = FormatString("HCI_CMD_WRITE_NUM_BROADCAST_RETRANSMISSIONS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Num_Broadcast_Retran;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_HOLD_MODE_ACTIVITY = FormatString("HCI_CMD_READ_HOLD_MODE_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_HOLD_MODE_ACTIVITY = FormatString("HCI_CMD_WRITE_HOLD_MODE_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Hold_Mode_Activity[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_TRANSMIT_POWER_LEVEL = FormatString("HCI_CMD_READ_TRANSMIT_POWER_LEVEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT8 Type;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SET_HOST_CONTROLLER_TO_HOST_FLOW_CONTROL = FormatString("HCI_CMD_SET_HOST_CONTROLLER_TO_HOST_FLOW_CONTROL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Flow_Control_Enable[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_HOST_BUFFER_SIZE = FormatString("HCI_CMD_HOST_BUFFER_SIZE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Host_ACL_Data_Packet_Length;
	UINT8 Host_SCO_Data_Packet_Length;
	UINT16 Host_Total_Num_ACL_Data_Packets;
	UINT16 Host_Total_Num_SCO_Data_Packets;
}
Struct BTHPORT_EVENT_HCI_COMMAND_HOST_NUMBER_OF_COMPLETED_PACKETS = FormatString("HCI_CMD_HOST_NUMBER_OF_COMPLETED_PACKETS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Number_Of_Handles;
	BTHPORT_Value_Completed_Packets Value_Completed_Packets[Number_Of_Handles]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LINK_SUPERVISION_TIMEOUT = FormatString("HCI_CMD_READ_LINK_SUPERVISION_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_LINK_SUPERVISION_TIMEOUT = FormatString("HCI_CMD_WRITE_LINK_SUPERVISION_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Link_Supervision_Timeout;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_NUMBER_OF_SUPPORTED_IAC = FormatString("HCI_CMD_READ_NUMBER_OF_SUPPORTED_IAC")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_CURRENT_IAC_LAP = FormatString("HCI_CMD_READ_CURRENT_IAC_LAP")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_CURRENT_IAC_LAP = FormatString("HCI_CMD_WRITE_CURRENT_IAC_LAP")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Num_Current_IAC;
	BTHPORT_Value_Write_Current_IAC_LAP Value_Write_Current_IAC_LAP[Num_Current_IAC]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_PERIOD_MODE = FormatString("HCI_CMD_READ_PAGE_SCAN_PERIOD_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_PERIOD_MODE = FormatString("HCI_CMD_WRITE_PAGE_SCAN_PERIOD_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Page_Scan_Period_Mode[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_MODE = FormatString("HCI_CMD_READ_PAGE_SCAN_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_MODE = FormatString("HCI_CMD_WRITE_PAGE_SCAN_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Page_Scan_Mode[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_SET_AFH_HOST_CHANNEL_CLASSIFICATION = FormatString("HCI_CMD_SET_AFH_HOST_CHANNEL_CLASSIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Map[10];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_SCAN_TYPE = FormatString("HCI_CMD_READ_INQUIRY_SCAN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_SCAN_TYPE = FormatString("HCI_CMD_WRITE_INQUIRY_SCAN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Inquiry_Scan_Type[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_MODE = FormatString("HCI_CMD_READ_INQUIRY_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_MODE = FormatString("HCI_CMD_WRITE_INQUIRY_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Inquiry_Mode[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_PAGE_SCAN_TYPE = FormatString("HCI_CMD_READ_PAGE_SCAN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_PAGE_SCAN_TYPE = FormatString("HCI_CMD_WRITE_PAGE_SCAN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Page_Scan_Type[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_EXTENDED_INQUIRY_RESPONSE = FormatString("HCI_CMD_READ_EXTENDED_INQUIRY_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_EXTENDED_INQUIRY_RESPONSE = FormatString("HCI_CMD_WRITE_EXTENDED_INQUIRY_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 FEC_Required;
	UINT8 Extended_Inquiry_Response[240];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_SIMPLE_PAIRING_MODE = FormatString("HCI_CMD_READ_SIMPLE_PAIRING_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_SIMPLE_PAIRING_MODE = FormatString("HCI_CMD_WRITE_SIMPLE_PAIRING_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Simple_Pairing_Mode[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_OOB_DATA = FormatString("HCI_CMD_READ_OOB_DATA")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL = FormatString("HCI_CMD_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL = FormatString("HCI_CMD_WRITE_INQUIRY_TRANSMIT_POWER_LEVEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	INT8 TX_Power;
}
Struct BTHPORT_EVENT_HCI_COMMAND_ENHANCED_FLUSH = FormatString("HCI_CMD_ENHANCED_FLUSH")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT8 Packet_Type;
}
Struct BTHPORT_EVENT_HCI_COMMAND_SEND_KEYPRESS_NOTIFICATION = FormatString("HCI_CMD_SEND_KEYPRESS_NOTIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Notification_Type;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_VERSION_INFORMATION = FormatString("HCI_CMD_READ_LOCAL_VERSION_INFORMATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_SUPPORTED_COMMANDS = FormatString("HCI_CMD_READ_LOCAL_SUPPORTED_COMMANDS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LOCAL_SUPPORTED_FEATURES = FormatString("HCI_CMD_READ_LOCAL_SUPPORTED_FEATURES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_BUFFER_SIZE = FormatString("HCI_CMD_READ_BUFFER_SIZE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_COUNTRY_CODE = FormatString("HCI_CMD_READ_COUNTRY_CODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_BD_ADDR = FormatString("HCI_CMD_READ_BD_ADDR")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_FAILED_CONTACT_COUNTER = FormatString("HCI_CMD_READ_FAILED_CONTACT_COUNTER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_RESET_FAILED_CONTACT_COUNTER = FormatString("HCI_CMD_RESET_FAILED_CONTACT_COUNTER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_GET_LINK_QUALITY = FormatString("HCI_CMD_GET_LINK_QUALITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_RSSI = FormatString("HCI_CMD_READ_RSSI")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LOOPBACK_MODE = FormatString("HCI_CMD_READ_LOOPBACK_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_LOOPBACK_MODE = FormatString("HCI_CMD_WRITE_LOOPBACK_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Loopback_Mode[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_ENABLE_DEVICE_UNDER_TEST_MODE = FormatString("HCI_CMD_ENABLE_DEVICE_UNDER_TEST_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_SIMPLE_PAIRING_DEBUG_MODE = FormatString("HCI_CMD_WRITE_SIMPLE_PAIRING_DEBUG_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Simple_Pairing_Debug_Mode[Parameter_Total_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_READ_LE_HOST_SUPPORT = FormatString("HCI_CMD_READ_LE_HOST_SUPPORT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_WRITE_LE_HOST_SUPPORT = FormatString("HCI_CMD_WRITE_LE_HOST_SUPPORT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 LE_Supported_Host;
	UINT8 Simult_LE_Host_Parameter;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_EVENT_MASK = FormatString("HCI_CMD_LE_SET_EVENT_MASK")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT64 LE_Event_Mask;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_READ_BUFFER_SIZE = FormatString("HCI_CMD_LE_READ_BUFFER_SIZE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_READ_LOCAL_SUPPORTED_FEATURES = FormatString("HCI_CMD_LE_READ_LOCAL_SUPPORTED_FEATURES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_RANDOM_ADDRESS = FormatString("HCI_CMD_LE_SET_RANDOM_ADDRESS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_ADVERTISING_PARAMETER = FormatString("HCI_CMD_LE_SET_ADVERTISING_PARAMETER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Advertising_Interval_Min;
	UINT16 Advertising_Interval_Max;
	UINT8 Advertising_Type;
	UINT8 Own_Address_Type;
	UINT8 Direct_Address_Type;
	UINT8 BD_ADDR[6];
	UINT8 Advertising_Channel_Map;
	UINT8 Advertising_Filter_Policy;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_READ_ADVERTISING_CHANNEL_TX_POWER = FormatString("HCI_CMD_LE_READ_ADVERTISING_CHANNEL_TX_POWER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_ADVERTISING_DATA = FormatString("HCI_CMD_LE_SET_ADVERTISING_DATA")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Advertising_Data_Length;
	UINT8 Advertising_Data[Advertising_Data_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_SCAN_RESPONSE_DATA = FormatString("HCI_CMD_LE_SET_SCAN_RESPONSE_DATA")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Scan_Response_Data_Length;
	UINT8 Scan_Response[Scan_Response_Data_Length];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_ADVERTISE_ENABLE = FormatString("HCI_CMD_LE_SET_ADVERTISE_ENABLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Advertising_Enable;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_SCAN_PARAMETER = FormatString("HCI_CMD_LE_SET_SCAN_PARAMETER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 LE_Scan_TYPE;
	UINT16 LE_Scan_Interval;
	UINT16 LE_Scan_Window;
	UINT8 Own_Address_Type;
	UINT8 Scanning_Filter_Policy;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_SCAN_ENABLE = FormatString("HCI_CMD_LE_SET_SCAN_ENABLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 LE_Scan_Enable;
	UINT8 Filter_Duplicates;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_CREATE_CONNECTION = FormatString("HCI_CMD_LE_CREATE_CONNECTION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 LE_Scan_Interval;
	UINT16 LE_Scan_Window;
	UINT8 Initiator_Filter_Policy;
	UINT8 Peer_Address_Type;
	UINT8 BD_ADDR[6];
	UINT8 Own_Address_Type;
	UINT16 Conn_Interval_Min;
	UINT16 Conn_Interval_Max;
	UINT16 Conn_Latency;
	UINT16 Supervision_Timeout;
	UINT16 Minimum_CE_Length;
	UINT16 Maximum_CE_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_CREATE_CONNECTION_CANCEL = FormatString("HCI_CMD_LE_CREATE_CONNECTION_CANCEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_READ_WHITE_LIST_SIZE = FormatString("HCI_CMD_LE_READ_WHITE_LIST_SIZE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_CLEAR_WHITE_LIST = FormatString("HCI_CMD_LE_CLEAR_WHITE_LIST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_ADD_DEVICE_TO_WHITE_LIST = FormatString("HCI_CMD_LE_ADD_DEVICE_TO_WHITE_LIST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Address_Type;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_REMOVE_DEVICE_FROM_WHITE_LIST = FormatString("HCI_CMD_LE_REMOVE_DEVICE_FROM_WHITE_LIST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Address_Type;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_CONNECTION_UPDATE = FormatString("HCI_CMD_LE_CONNECTION_UPDATE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Conn_Interval_Min;
	UINT16 Conn_Interval_Max;
	UINT16 Conn_Latency;
	UINT16 Supervision_Timeout;
	UINT16 Minimum_CE_Length;
	UINT16 Maximum_CE_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_SET_HOST_CHANNEL_CLASSIFICATION = FormatString("HCI_CMD_LE_SET_HOST_CHANNEL_CLASSIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 LE_Channel_Map[5];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_READ_CHANNEL_MAP = FormatString("HCI_CMD_LE_READ_CHANNEL_MAP")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_READ_REMOTE_USED_FEATURES = FormatString("HCI_CMD_LE_READ_REMOTE_USED_FEATURES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_ENCRYPT = FormatString("HCI_CMD_LE_ENCRYPT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Key[16];
	UINT8 Plaintext_Data[16];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_RAND = FormatString("HCI_CMD_LE_RAND")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_START_ENCRYPTION = FormatString("HCI_CMD_LE_START_ENCRYPTION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT64 Random_Number;
	UINT32 Encrypted_Diversifier;
	UINT8 Long_Term_Key[16];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_LONG_TERM_KEY_REQUEST_REPLY = FormatString("HCI_CMD_LE_LONG_TERM_KEY_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
	UINT8 Long_Term_Key[16];
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_LONG_TERM_KEY_REQUEST_NEGATIVE_REPLY = FormatString("HCI_CMD_LE_LONG_TERM_KEY_REQUEST_NEGATIVE_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_READ_SUPPORTED_STATES = FormatString("HCI_CMD_LE_READ_SUPPORTED_STATES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_RECEIVER_TEST = FormatString("HCI_CMD_LE_RECEIVER_TEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 RX_Frequency;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_TRANSMITTER_TEST = FormatString("HCI_CMD_LE_TRANSMITTER_TEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 TX_Frequency;
	UINT8 Length_Of_Test_Data;
	UINT8 Packet_Payload;
}
Struct BTHPORT_EVENT_HCI_COMMAND_LE_TEST_END = FormatString("HCI_CMD_LE_TEST_END")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
}
Struct BTHPORT_EVENT_HCI_EVENT_GENERIC = FormatString("HCI_EVT_GENERIC")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Event_Parameter[Event_Total_Length];
}
Struct BTHPORT_EVENT_HCI_EVENT_INQUIRYCOMPLETE = FormatString("HCI_EVT_INQUIRYCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
}
Struct BTHPORT_EVENT_HCI_EVENT_INQUIRYRESULT = FormatString("HCI_EVT_INQUIRYRESULT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_Responses;
	BTHPORT_Result_InquiryResult Result_InquiryResult[Num_Responses]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_EVENT_CONNECTIONCOMPLETE = FormatString("HCI_EVT_CONNECTIONCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 BD_ADDR[6];
	UINT8 Link_Type;
	UINT8 Encryption_Mode;
}
Struct BTHPORT_EVENT_HCI_EVENT_CONNECTIONREQUEST = FormatString("HCI_EVT_CONNECTIONREQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	BLOB(3) Class_Of_Device;
	UINT8 Link_Type;
}
Struct BTHPORT_EVENT_HCI_EVENT_DISCONNECTIONCOMPLETE = FormatString("HCI_EVT_DISCONNECTIONCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Data;
}
Struct BTHPORT_EVENT_HCI_EVENT_AUTHENTICATIONCOMPLETE = FormatString("HCI_EVT_AUTHENTICATIONCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_EVENT_REMOTENAMEREQUESTCOMPLETE = FormatString("HCI_EVT_REMOTENAMEREQUESTCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT8 BD_ADDR[6];
	AsciiString Remote_Name;
}
Struct BTHPORT_EVENT_HCI_EVENT_ENCRYPTIONCHANGE = FormatString("HCI_EVT_ENCRYPTIONCHANGE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Encryption_Enable;
}
Struct BTHPORT_EVENT_HCI_EVENT_CHANGECONNECTIONLINKKEYCOMPLETE = FormatString("HCI_EVT_CHANGECONNECTIONLINKKEYCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_EVENT_MASTERLINKKEYCOMPLETE = FormatString("HCI_EVT_MASTERLINKKEYCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Key_Flag;
}
Struct BTHPORT_EVENT_HCI_EVENT_READREMOTESUPPORTEDFEATURESCOMPLETE = FormatString("HCI_EVT_READREMOTESUPPORTEDFEATURESCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT64 LMP_Features;
}
Struct BTHPORT_EVENT_HCI_EVENT_READREMOTEVERSIONINFORMATIONCOMPLETE = FormatString("HCI_EVT_READREMOTEVERSIONINFORMATIONCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 LMP_Version;
	UINT16 Manufacturer_Name;
	UINT16 LMP_Subversion;
}
Struct BTHPORT_EVENT_HCI_EVENT_QOSSETUPCOMPLETE = FormatString("HCI_EVT_QOSSETUPCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Flags;
	UINT8 Service_Type;
	UINT32 Token_Rate;
	UINT32 Peak_Bandwidth;
	UINT32 Latency;
	UINT32 Delay_Variation;
}
Struct BTHPORT_EVENT_HCI_EVENT_COMMANDCOMPLETENOSTATUS = FormatString("HCI_EVT_COMMANDCOMPLETENOSTATUS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
}
Struct BTHPORT_EVENT_HCI_EVENT_COMMANDCOMPLETE = FormatString("HCI_EVT_COMMANDCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
}
Struct BTHPORT_EVENT_HCI_EVENT_COMMANDSTATUS = FormatString("HCI_EVT_COMMANDSTATUS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
}
Struct BTHPORT_EVENT_HCI_EVENT_HARDWAREERROR = FormatString("HCI_EVT_HARDWAREERROR")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Hardware_Code;
}
Struct BTHPORT_EVENT_HCI_EVENT_FLUSHOCCURED = FormatString("HCI_EVT_FLUSHOCCURED")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_EVENT_ROLECHANGE = FormatString("HCI_EVT_ROLECHANGE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT8 BD_ADDR[6];
	UINT8 New_Role;
}
Struct BTHPORT_EVENT_HCI_EVENT_NUMBEROFCOMPLETEDPACKETS = FormatString("HCI_EVT_NUMBEROFCOMPLETEDPACKETS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_Handles;
	BTHPORT_Result_CompletedPackets Result_CompletedPackets[Num_Handles]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_EVENT_MODECHANGE = FormatString("HCI_EVT_MODECHANGE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Current_Mode;
	UINT16 Interval;
}
Struct BTHPORT_EVENT_HCI_EVENT_RETURNLINKKEYS = FormatString("HCI_EVT_RETURNLINKKEYS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 NumKeys;
	BTHPORT_Result_ReturnLinkKeys Result_ReturnLinkKeys[NumKeys]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_EVENT_PINCODEREQUEST = FormatString("HCI_EVT_PINCODEREQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_EVENT_LINKKEYREQUEST = FormatString("HCI_EVT_LINKKEYREQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_EVENT_LINKKEYNOTIFICATION = FormatString("HCI_EVT_LINKKEYNOTIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 LinkKey[16];
	UINT8 Key_Type;
}
Struct BTHPORT_EVENT_HCI_EVENT_LOOPBACKCOMMAND = FormatString("HCI_EVT_LOOPBACKCOMMAND")
{
	UINT8 Event_SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 Event_CommandPacketsAllowed;
	UINT32 Event_AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Command_SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 Command_CommandPacketsAllowed;
	UINT32 Command_AclWriteCredits;
	UINT16 Op_Code;
	UINT8 Parameter_Total_Length;
	UINT8 Parameter;
}
Struct BTHPORT_EVENT_HCI_EVENT_DATABUFFEROVERFLOW = FormatString("HCI_EVT_DATABUFFEROVERFLOW")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Link_Type;
}
Struct BTHPORT_EVENT_HCI_EVENT_MAXSLOTSCHANGE = FormatString("HCI_EVT_MAXSLOTSCHANGE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT16 Connection_Handle;
	UINT8 LMP_Max_Slots;
}
Struct BTHPORT_EVENT_HCI_EVENT_READCLOCKOFFSETCOMPLETE = FormatString("HCI_EVT_READCLOCKOFFSETCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT16 Clock_Offset;
}
Struct BTHPORT_EVENT_HCI_EVENT_CONNECTIONPACKETTYPECHANGED = FormatString("HCI_EVT_CONNECTIONPACKETTYPECHANGED")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT16 Packet_Type;
}
Struct BTHPORT_EVENT_HCI_EVENT_QOSVIOLATION = FormatString("HCI_EVT_QOSVIOLATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_EVENT_PAGESCANMODECHANGE = FormatString("HCI_EVT_PAGESCANMODECHANGE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Page_Scan_Mode;
}
Struct BTHPORT_EVENT_HCI_EVENT_PAGESCANREPETITIONMODECHANGE = FormatString("HCI_EVT_PAGESCANREPETITIONMODECHANGE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Page_Scan_Repetition_Mode;
}
Struct BTHPORT_EVENT_HCI_EVENT_INQUIRYRESULTWITHRSSI = FormatString("HCI_EVT_INQUIRYRESULTWITHRSSI")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_Responses;
	BTHPORT_Result_InquiryResultWithRSSI Result_InquiryResultWithRSSI[Num_Responses]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_EVENT_READREMOTEEXTENDEDFEATURESCOMPLETE = FormatString("HCI_EVT_READREMOTEEXTENDEDFEATURESCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Page_Number;
	UINT8 Maximum_Page_Number;
	UINT64 LMP_Features;
}
Struct BTHPORT_EVENT_HCI_EVENT_SYNCHRONOUSCONNECTIONCOMPLETE = FormatString("HCI_EVT_SYNCHRONOUSCONNECTIONCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 BD_ADDR[6];
	UINT8 Link_Type;
	UINT8 Transmission_Interval;
	UINT8 Retransmission_Window;
	UINT16 Rx_Packet_Length;
	UINT16 Tx_Packet_Length;
	UINT8 AirMode;
}
Struct BTHPORT_EVENT_HCI_EVENT_SYNCHRONOUSCONNECTIONCHANGED = FormatString("HCI_EVT_SYNCHRONOUSCONNECTIONCHANGED")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 BD_ADDR[6];
	UINT8 Transmission_Interval;
	UINT8 Retransmission_Window;
	UINT16 Rx_Packet_Length;
	UINT16 Tx_Packet_Length;
}
Struct BTHPORT_EVENT_HCI_EVENT_ENHANCEDFLUSHCOMPLETE = FormatString("HCI_EVT_ENHANCEDFLUSHCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_EVENT_HCISNIFFSUBRATING = FormatString("HCI_EVT_HCISNIFFSUBRATING")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT16 Maximum_Transmit_Latency;
	UINT16 Maximum_Receive_Latency;
	UINT16 Minimum_Remote_Timeout;
	UINT16 Minimum_Local_Timeout;
}
Struct BTHPORT_EVENT_HCI_EVENT_EXTENDEDINQUIRYRESULT = FormatString("HCI_EVT_EXTENDEDINQUIRYRESULT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_Responses;
	BTHPORT_Result_EIR Result_EIR[Num_Responses]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_EVENT_IOCAPABILITYREQUEST = FormatString("HCI_EVT_IOCAPABILITYREQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_EVENT_IOCAPABILITYRESPONSE = FormatString("HCI_EVT_IOCAPABILITYRESPONSE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 IO_Capability;
	UINT8 OOB_Data_Present;
	UINT8 AuthenticationRequirements;
}
Struct BTHPORT_EVENT_HCI_EVENT_USERCONFIRMATIONREQUEST = FormatString("HCI_EVT_USERCONFIRMATIONREQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT32 Numeric_Value;
}
Struct BTHPORT_EVENT_HCI_EVENT_USERPASSKEYREQUEST = FormatString("HCI_EVT_USERPASSKEYREQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_EVENT_REMOTEOOBDATAREQUEST = FormatString("HCI_EVT_REMOTEOOBDATAREQUEST")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_EVENT_SIMPLEPAIRINGCOMPLETE = FormatString("HCI_EVT_SIMPLEPAIRINGCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Status;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_EVENT_LINKSUPERVISIONTIMEOUTCHANGED = FormatString("HCI_EVT_LINKSUPERVISIONTIMEOUTCHANGED")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT16 Connection_Handle;
	UINT16 Link_Supervision_Timeout;
}
Struct BTHPORT_EVENT_HCI_EVENT_USERPASSKEYNOTIFICATION = FormatString("HCI_EVT_USERPASSKEYNOTIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT32 Passkey;
}
Struct BTHPORT_EVENT_HCI_EVENT_KEYPRESSNOTIFICATION = FormatString("HCI_EVT_KEYPRESSNOTIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 Notification_Type;
}
Struct BTHPORT_EVENT_HCI_EVENT_REMOTEHOSTSUPPORTEDFEATURESNOTIFICATION = FormatString("HCI_EVT_REMOTEHOSTSUPPORTEDFEATURESNOTIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 BD_ADDR[6];
	UINT8 HostSupportedFeatures[8];
}
Struct BTHPORT_EVENT_HCI_EVENT_LEMETAEVENT = FormatString("HCI_EVT_LEMETAEVENT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 LEEvent_Parameter[Event_Total_Length];
}
Struct BTHPORT_EVENT_HCI_EVENT_LECONNECTIONCOMPLETE = FormatString("HCI_EVT_LECONNECTIONCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Subevent_Code;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Role;
	UINT8 Peer_Address_Type;
	UINT8 Peer_Address[6];
	UINT16 Connection_Interval;
	UINT16 Connection_Latency;
	UINT16 Supervision_Timeout;
	UINT8 Master_Clock_Accuracy;
}
Struct BTHPORT_EVENT_HCI_EVENT_LECONNECTIONUPDATECOMPLETE = FormatString("HCI_EVT_LECONNECTIONUPDATECOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Subevent_Code;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT16 Connection_Interval;
	UINT16 Connection_Latency;
	UINT16 Supervision_Timeout;
}
Struct BTHPORT_EVENT_HCI_EVENT_LEREADREMOTEUSEDFEATURESCOMPLETE = FormatString("HCI_EVT_LEREADREMOTEUSEDFEATURESCOMPLETE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Subevent_Code;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT64 LE_Features;
}
Struct BTHPORT_EVENT_HCI_CX_EVENT_GENERIC = FormatString("HCI_CX_EVT_GENERIC")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_RNR_CANCEL = FormatString("HCI_CC_EVT_RNR_CANCEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_REQUEST_REPLY = FormatString("HCI_CC_EVT_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_LINK_POLICY_SETTINGS = FormatString("HCI_CC_EVT_READ_LINK_POLICY_SETTINGS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT16 Link_Policy_Settings;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_WRITE_LINK_POLICY_SETTINGS = FormatString("HCI_CC_EVT_WRITE_LINK_POLICY_SETTINGS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_SNIFF_SUBRATING = FormatString("HCI_CC_EVT_SNIFF_SUBRATING")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_FLUSH = FormatString("HCI_CC_EVT_FLUSH")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_PIN_TYPE = FormatString("HCI_CC_EVT_READ_PIN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 PIN_Type;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_STORED_LINK_KEY = FormatString("HCI_CC_EVT_READ_STORED_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Max_Num_Keys;
	UINT16 Num_Keys_Read;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_WRITE_STORED_LINK_KEY = FormatString("HCI_CC_EVT_WRITE_STORED_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Num_Keys_Written;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_DELETE_STORED_LINK_KEY = FormatString("HCI_CC_EVT_DELETE_STORED_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Num_Keys_Deleted;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_NAME = FormatString("HCI_CC_EVT_READ_LOCAL_NAME")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	AsciiString(248) Name;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_TIMEOUT = FormatString("HCI_CC_EVT_READ_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Timeout;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_ENABLE = FormatString("HCI_CC_EVT_READ_ENABLE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Enable;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_SCAN_ACTIVITY = FormatString("HCI_CC_EVT_READ_SCAN_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Scan_Interval;
	UINT16 Scan_Window;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_ENCRYPTION_MODE = FormatString("HCI_CC_EVT_ENCRYPTION_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Encryption_Mode;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_COD = FormatString("HCI_CC_EVT_READ_COD")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 COD[3];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_VOICE_SETTING = FormatString("HCI_CC_EVT_READ_VOICE_SETTING")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Voice_Setting;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_AUTOMATIC_FLUSH_TIMEOUT = FormatString("HCI_CC_EVT_READ_AUTOMATIC_FLUSH_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Flush_Timeout;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_WRITE_AUTOMATIC_FLUSH_TIMEOUT = FormatString("HCI_CC_EVT_WRITE_AUTOMATIC_FLUSH_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_NUM_BROADCAST_RETRANSMISSIONS = FormatString("HCI_CC_EVT_READ_NUM_BROADCAST_RETRANSMISSIONS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Num_Broadcast_Retran;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_HOLD_MODE_ACTIVITY = FormatString("HCI_CC_EVT_READ_HOLD_MODE_ACTIVITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Hold_Mode_Activity;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_TRANSMIT_POWER_LEVEL = FormatString("HCI_CC_EVT_READ_TRANSMIT_POWER_LEVEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	INT8 Transmit_Power_Level;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_LINK_SUPERVISION_TIMEOUT = FormatString("HCI_CC_EVT_READ_LINK_SUPERVISION_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT16 Link_Supervision_Timeout;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_WRITE_LINK_SUPERVISION_TIMEOUT = FormatString("HCI_CC_EVT_WRITE_LINK_SUPERVISION_TIMEOUT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_NUMBER_OF_SUPPORTED_IAC = FormatString("HCI_CC_EVT_READ_NUMBER_OF_SUPPORTED_IAC")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Num_Supported_IAC;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_CURRENT_IAC_LAP = FormatString("HCI_CC_EVT_READ_CURRENT_IAC_LAP")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Num_Current_IAC;
	BTHPORT_Result_Read_Current_IAC_LAP Result_Read_Current_IAC_LAP[Num_Current_IAC]; // Struct Array
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_MODE = FormatString("HCI_CC_EVT_READ_MODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Mode;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_SCAN_TYPE = FormatString("HCI_CC_EVT_READ_SCAN_TYPE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Scan_Type;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_EIR = FormatString("HCI_CC_EVT_READ_EIR")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 FEC_Required;
	UINT8 Extended_Inquiry_Response[240];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_VERSION_INFORMATION = FormatString("HCI_CC_EVT_READ_LOCAL_VERSION_INFORMATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 HCI_Version;
	UINT16 HCI_Revision;
	UINT8 LMP_Version;
	UINT16 ManufacturerName;
	UINT16 LMP_Subversion;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_SUPPORTED_COMMANDS = FormatString("HCI_CC_EVT_READ_LOCAL_SUPPORTED_COMMANDS")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 RawMap[64];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_LOCAL_SUPPORTED_FEATURES = FormatString("HCI_CC_EVT_READ_LOCAL_SUPPORTED_FEATURES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT64 Features;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_BUFFER_SIZE = FormatString("HCI_CC_EVT_READ_BUFFER_SIZE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 ACL_Data_Packet_Length;
	UINT8 SCO_Data_Packet_Length;
	UINT16 Num_ACL_Data_Packets;
	UINT16 Num_SCO_Data_Packets;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_COUNTRY_CODE = FormatString("HCI_CC_EVT_READ_COUNTRY_CODE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Country_Code;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_BD_ADDR = FormatString("HCI_CC_EVT_READ_BD_ADDR")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_FAILED_CONTACT_COUNTER = FormatString("HCI_CC_EVT_READ_FAILED_CONTACT_COUNTER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Failed_Contact_Counter;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_RESET_FAILED_CONTACT_COUNTER = FormatString("HCI_CC_EVT_READ_RESET_FAILED_CONTACT_COUNTER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_GET_LINK_QUALITY = FormatString("HCI_CC_EVT_GET_LINK_QUALITY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Link_Quality;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_RSSI = FormatString("HCI_CC_EVT_READ_RSSI")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	INT8 RSSI;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_IO_CAPABILITY_RESPONSE = FormatString("HCI_CC_EVT_IO_CAPABILITY_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_OOB_DATA = FormatString("HCI_CC_EVT_READ_OOB_DATA")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 C[16];
	UINT8 R[16];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL = FormatString("HCI_CC_EVT_READ_INQUIRY_RESPONSE_TRANSMIT_POWER_LEVEL")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	INT8 Tx_Power;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_SEND_KEYPRESS_NOTIFICATION = FormatString("HCI_CC_EVT_SEND_KEYPRESS_NOTIFICATION")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 BD_ADDR[6];
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_VENDOR_SPECIFIC_COMMAND = FormatString("HCI_CC_EVT_VENDOR_SPECIFIC_COMMAND")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 DataLength;
	UINT8 Result[DataLength];
}
Struct BTHPORT_EVENT_HCI_CC_LE_READ_BUFFER_SIZE = FormatString("HCI_CC_LE_READ_BUFFER_SIZE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 HC_LE_Data_Packet_Length;
	UINT8 HC_Total_Num_LE_Data_Packets;
}
Struct BTHPORT_EVENT_HCI_CC_LE_READ_ADVERTISING_CHANNEL_TX_POWER = FormatString("HCI_CC_LE_READ_ADVERTISING_CHANNEL_TX_POWER")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 Transmit_Power_Level;
}
Struct BTHPORT_EVENT_HCI_CC_LE_READ_WHITE_LIST_SIZE = FormatString("HCI_CC_LE_READ_WHITE_LIST_SIZE")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 White_List_Size;
}
Struct BTHPORT_EVENT_HCI_CC_LE_READ_CHANNEL_MAP = FormatString("HCI_CC_LE_READ_CHANNEL_MAP")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 LE_Channel_Map[5];
}
Struct BTHPORT_EVENT_HCI_CC_LE_ENCRYPT = FormatString("HCI_CC_LE_ENCRYPT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Encrypted_Data[16];
}
Struct BTHPORT_EVENT_HCI_CC_LE_RAND = FormatString("HCI_CC_LE_RAND")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT64 Random_Number;
}
Struct BTHPORT_EVENT_HCI_CC_LE_REQUEST_REPLY = FormatString("HCI_CC_LE_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_LE_READ_SUPPORTED_STATES = FormatString("HCI_CC_LE_READ_SUPPORTED_STATES")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT64 LE_States;
}
Struct BTHPORT_EVENT_HCI_CC_LE_TEST_END = FormatString("HCI_CC_LE_TEST_END")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Number_Of_Packets;
}
Struct BTHPORT_EVENT_HCI_CC_LE_LONG_TERM_KEY_REQUEST_REPLY = FormatString("HCI_CC_LE_LONG_TERM_KEY_REQUEST_REPLY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_READ_LE_HOST_SUPPORT = FormatString("HCI_CC_EVT_READ_LE_HOST_SUPPORT")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT8 LE_Supported_Host;
	UINT8 Simult_LE_Host_Parameter;
}
Struct BTHPORT_EVENT_HCI_CC_EVENT_ROLE_DISCOVERY = FormatString("HCI_CC_EVT_ROLE_DISCOVERY")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT8 CommandPacketsAllowed;
	UINT32 AclWriteCredits;
	UINT8 Event_Code;
	UINT8 Event_Total_Length;
	UINT8 Num_HCI_Command_Packets;
	UINT16 Command_Opcode;
	UINT8 Status;
	UINT16 Connection_Handle;
	UINT8 Current_Role;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_REJECT = FormatString("L2CAP_SIGNAL_REJECT")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 Reason;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_CONNECT_REQUEST = FormatString("L2CAP_SIGNAL_CONNECT_REQUEST")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 Psm;
	UINT16 SCID;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_CONNECT_RESPONSE = FormatString("L2CAP_SIGNAL_CONNECT_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 DCID;
	UINT16 SCID;
	UINT16 Result;
	UINT16 Status;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_CONFIG_REQUEST = FormatString("L2CAP_SIGNAL_CONFIG_REQUEST")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 DCID;
	UINT16 Flags;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_CONFIG_RESPONSE = FormatString("L2CAP_SIGNAL_CONFIG_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 SCID;
	UINT16 Flags;
	UINT16 Result;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_DISCONNECT_REQUEST = FormatString("L2CAP_SIGNAL_DISCONNECT_REQUEST")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 DCID;
	UINT16 SCID;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_DISCONNECT_RESPONSE = FormatString("L2CAP_SIGNAL_DISCONNECT_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 DCID;
	UINT16 SCID;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_ECHO_REQUEST = FormatString("L2CAP_SIGNAL_ECHO_REQUEST")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_ECHO_RESPONSE = FormatString("L2CAP_SIGNAL_ECHO_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_INFO_REQUEST = FormatString("L2CAP_SIGNAL_INFO_REQUEST")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 InfoType;
}
Struct BTHPORT_EVENT_L2CAP_SIGNAL_INFO_RESPONSE = FormatString("L2CAP_SIGNAL_INFO_RESPONSE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Length;
	UINT16 InfoType;
	UINT16 Result;
}
Struct BTHPORT_EVENT_BRB_GET_LOCAL_BD_ADDR = FormatString("BRB_GET_LOCAL_BD_ADDR")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
}
Struct BTHPORT_EVENT_BRB_GET_LOCAL_SIGNAL_PARAMETERS = FormatString("BRB_GET_LOCAL_SIGNAL_PARAMETERS")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT8 RSSI;
	UINT8 MaxPowerLevel;
	UINT8 CurrentPowerLevel;
}
Struct BTHPORT_EVENT_BRB_GET_DEVICE_INTERFACE_STRING = FormatString("BRB_GET_DEVICE_INTERFACE_STRING")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT32 StringLength;
	UnicodeString(StringLength) DeviceInterfaceString;
}
Struct BTHPORT_EVENT_BRB_STORED_LINK_KEY = FormatString("BRB_STORED_LINK_KEY")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT32 Flags;
	UINT32 NumAddresses;
	UINT64 BtAddresses[NumAddresses];
}
Struct BTHPORT_EVENT_BRB_L2CA_REGISTER_SERVER = FormatString("BRB_L2CA_REGISTER_SERVER")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT16 PSM;
	UINT32 IndicationFlags;
	UINT64 IndicationCallbackContext;
	UINT64 ReferenceObject;
	UINT64 ServerHandle;
}
Struct BTHPORT_EVENT_BRB_L2CA_UNREGISTER_SERVER = FormatString("BRB_L2CA_UNREGISTER_SERVER")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ServerHandle;
	UINT16 Psm;
}
Struct BTHPORT_EVENT_BRB_L2CA_OPEN_CHANNEL = FormatString("BRB_L2CA_OPEN_CHANNEL")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 ChannelHandle;
	UINT8 Psm_Valid;
	UINT16 Response;
	UINT16 ResponseStatus;
	UINT16 Psm;
	UINT32 ChannelFlags;
	UINT64 BtAddress;
	UINT32 ConfigOut_Flags;
	UINT16 ConfigOut_Mtu_Min;
	UINT16 ConfigOut_Mtu_Preferred;
	UINT16 ConfigOut_Mtu_Max;
	UINT16 ConfigOut_FlushTO_Min;
	UINT16 ConfigOut_FlushTO_Preferred;
	UINT16 ConfigOut_FlushTO_Max;
	UINT8 ConfigOut_Flow_Flags;
	UINT8 ConfigOut_Flow_ServiceType;
	UINT32 ConfigOut_Flow_TokenRate;
	UINT32 ConfigOut_Flow_TokenBucketSize;
	UINT32 ConfigOut_Flow_PeakBandwidth;
	UINT32 ConfigOut_Flow_Latency;
	UINT32 ConfigOut_Flow_DelayVariation;
	UINT16 ConfigOut_LinkTO;
	UINT32 ConfigOut_NumExtraOptions;
	BTHPORT_ConfigOut_ExtraOptions_Open_Channel ConfigOut_ExtraOptions_Open_Channel[ConfigOut_NumExtraOptions]; // Struct Array
	UINT8 ConfigOut_ServiceType;
	UINT32 ConfigOut_Latency;
	UINT8 ConfigOut_ModeConfig_Valid;
	UINT32 ConfigOut_ModeConfig_Flags;
	UINT8 ConfigOut_MC_RAF_Mode;
	UINT8 ConfigOut_MC_RAF_TxWindowSize;
	UINT8 ConfigOut_MC_RAF_MaxTransmit;
	UINT16 ConfigOut_MC_RAF_RetransmissionTO;
	UINT16 ConfigOut_MC_RAF_MonitorTO;
	UINT16 ConfigOut_MC_RAF_MaxPDUSize;
	UINT8 ConfigOut_Fcs_Valid;
	UINT16 ConfigOut_Fcs;
	UINT8 ConfigOut_ExtendedFlowSpec_Valid;
	UINT8 ConfigOut_EFS_Identifier;
	UINT8 ConfigOut_EFS_ServiceType;
	UINT16 ConfigOut_EFS_MaxSDUSize;
	UINT32 ConfigOut_EFS_SDUInterArrivalTime;
	UINT32 ConfigOut_EFS_AccessLatency;
	UINT32 ConfigOut_EFS_FlushTimeout;
	UINT8 ConfigOut_ExtendedWindowSize_Valid;
	UINT16 ConfigOut_ExtendedWindowSize;
	UINT32 ConfigIn_Flags;
	UINT16 ConfigIn_Mtu_Min;
	UINT16 ConfigIn_Mtu_Preferred;
	UINT16 ConfigIn_Mtu_Max;
	UINT16 ConfigIn_FlushTO_Min;
	UINT16 ConfigIn_FlushTO_Max;
	UINT32 CallbackFlags;
	UINT64 CallbackContext;
	UINT64 ReferenceObject;
	UINT8 IncomingQueueDepth;
}
Struct BTHPORT_EVENT_BRB_L2CA_CLOSE_CHANNEL = FormatString("BRB_L2CA_CLOSE_CHANNEL")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ChannelHandle;
}
Struct BTHPORT_EVENT_BRB_L2CA_UPDATE_CHANNEL = FormatString("BRB_L2CA_UPDATE_CHANNEL")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ChannelHandle;
	UINT32 NewChannelFlags;
	UINT32 FailedChannelFlags;
}
Struct BTHPORT_EVENT_BRB_L2CA_ACL_TRANSFER = FormatString("BRB_L2CA_ACL_TRANSFER")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ChannelHandle;
	UINT32 TransferFlags;
	UINT32 BufferSize;
	UINT32 BufferStartSize;
	BLOB(BufferStartSize) BufferStart;
	UINT32 BufferEndSize;
	BLOB(BufferEndSize) BufferEnd;
	UINT64 Timeout;
	UINT32 RemainingBufferSize;
}
Struct BTHPORT_EVENT_BRB_L2CA_CHANNEL_PROPERTY = FormatString("BRB_L2CA_CHANNEL_PROPERTY")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ChannelHandle;
	UINT16 Property_Type;
	UINT8 Property_Size;
	UINT64 Property[Property_Size];
}
Struct BTHPORT_EVENT_BRB_L2CA_PING = FormatString("BRB_L2CA_PING")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT8 PingRequestLength;
	BLOB(PingRequestLength) PingRequestData;
	UINT8 PingResponseLength;
	BLOB(PingResponseLength) PingResponseData;
}
Struct BTHPORT_EVENT_BRB_L2CA_INFO_REQUEST = FormatString("BRB_L2CA_INFO_REQUEST")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT16 InfoType;
	UINT16 Result;
	UINT8 DataLength;
	UINT8 Data[DataLength];
}
Struct BTHPORT_EVENT_BRB_PSM = FormatString("BRB_PSM")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT16 Psm;
}
Struct BTHPORT_EVENT_BRB_ACL_GET_MODE = FormatString("BRB_ACL_GET_MODE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT8 AclMode = BTHPORT_ACL_Mode(this);
}
Struct BTHPORT_EVENT_BRB_ACL_ENTER_ACTIVE_MODE = FormatString("BRB_ACL_ENTER_ACTIVE_MODE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
}
Struct BTHPORT_EVENT_BRB_ACL_ENTER_SNIFF_MODE = FormatString("BRB_ACL_ENTER_SNIFF_MODE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ChannelHandle;
	UINT16 Sniff_Max_Interval;
	UINT16 Sniff_Min_Interval;
	UINT16 Sniff_Attempt;
	UINT16 Sniff_Timeout;
}
Struct BTHPORT_EVENT_BRB_ACL_ENTER_PARK_MODE = FormatString("BRB_ACL_ENTER_PARK_MODE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ChannelHandle;
	UINT16 Beacon_Max_Interval;
	UINT16 Beacon_Min_Interval;
}
Struct BTHPORT_EVENT_BRB_ACL_ENTER_HOLD_MODE = FormatString("BRB_ACL_ENTER_HOLD_MODE")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT64 ChannelHandle;
	UINT16 Hold_Mode_Max_Interval;
	UINT16 Hold_Mode_Min_Interval;
}
Struct BTHPORT_EVENT_BRB_ACL_ENHANCED_FLUSH = FormatString("BRB_ACL_ENHANCED_FLUSH")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 BtAddress;
	UINT8 PacketType;
}
Struct BTHPORT_EVENT_BRB_L2CA_REGISTER_FIXED_CHANNEL_SERVER = FormatString("BRB_L2CA_REGISTER_FIXED_CHANNEL_SERVER")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT16 FixedChannel;
	UINT32 Flags;
	UINT64 IndicationCallback;
	UINT64 IndicationCallbackContext;
	UINT64 ReferenceObject;
	UINT64 FixedChannelServerHandle;
}
Struct BTHPORT_EVENT_BRB_L2CA_UNREGISTER_FIXED_CHANNEL_SERVER = FormatString("BRB_L2CA_UNREGISTER_FIXED_CHANNEL_SERVER")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 FixedChannelServerHandle;
}
Struct BTHPORT_EVENT_BRB_L2CA_SEND_FIXED_CHANNEL_DATA = FormatString("BRB_L2CA_SEND_FIXED_CHANNEL_DATA")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 bthAddr;
	UINT32 DataTransferFlags;
	UINT8 DataLength;
	UINT32 DataStartSize;
	BLOB(DataStartSize) DataStart;
	UINT32 DataEndSize;
	BLOB(DataEndSize) DataEnd;
}
Struct BTHPORT_EVENT_BRB_L2CA_CONNECT_FIXED_CHANNEL = FormatString("BRB_L2CA_CONNECT_FIXED_CHANNEL")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
	UINT64 LE_Flink;
	UINT64 LE_Blink;
	UINT32 Length;
	UINT16 Version;
	UINT16 Type;
	UINT32 BthportFlags;
	UINT32 Status;
	UINT8 BtStatus;
	UINT8 BTHPORT_CONTEXT_SIZE;
	UINT64 Context[BTHPORT_CONTEXT_SIZE];
	UINT64 ClientContext[BTHPORT_CONTEXT_SIZE];
	UINT8 BTHPORT_RESERVED_FIELD_SIZE;
	UINT32 Reserved[BTHPORT_RESERVED_FIELD_SIZE];
	UINT64 bthAddr;
	UINT32 DataTransferFlags;
}
Struct BTHPORT_EVENT_L2CAP_IRP_COMPLETE = FormatString("Complete a non-read IRP")
{
	UINT8 SentStatus = BTHPORT_L2CAP_Sent_Status(this);
}
Struct BTHPORT_EVENT_TIE_ACTIVITY_ID = FormatString("EVENT_TIE_ACTIVITY_ID")
{
	GUID(true) Child_Activity_ID;
	GUID(true) Related_Activity_ID;
}
Struct BTHPORT_EVENT_HCI_ACL_SEGMENT = FormatString("Segmenting L2CAP packet into HCI Packets")
{
	UINT32 Num_HCI_Packets;
}
Struct BTHPORT_EVENT_HCI_ACL_WRITE = FormatString("Write HCI Packet")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT16 Connection_Handle;
	UINT8 Packet_Boundary_Flag;
	UINT8 Broadcast_Flag;
	UINT16 Buffer_Length;
	UINT16 PDU_Length;
	UINT16 Channel_ID;
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Signal_Length;
	UINT16 Data_Length;
	BLOB(Data_Length) Data;
}
Struct BTHPORT_EVENT_HCI_ACL_READ = FormatString("Read HCI Packet")
{
	UINT8 SentStatus = BTHPORT_HCI_Sent_Status(this);
	UINT16 Connection_Handle;
	UINT8 Packet_Boundary_Flag;
	UINT8 Broadcast_Flag;
	UINT16 Buffer_Length;
	UINT16 PDU_Length;
	UINT16 Channel_ID;
	UINT8 Code;
	UINT8 Identifier;
	UINT16 Signal_Length;
	UINT16 Data_Length;
	BLOB(Data_Length) Data;
}
Struct BTHPORT_EVENT_QUERY_RADIO_STATE = FormatString("RM_QUERY_RADIO_STATE")
{
	UINT32 RadioState = BTHPORT_BTH_RADIO_STATE(this);
}
Struct BTHPORT_EVENT_SET_RADIO_STATE_START = FormatString("RM_SET_RADIO_START")
{
	UINT32 RadioState = BTHPORT_BTH_RADIO_STATE(this);
}
Struct BTHPORT_EVENT_SET_RADIO_STATE_STOP = FormatString("RM_SET_RADIO_STOP")
{
	UINT32 RadioState = BTHPORT_BTH_RADIO_STATE(this);
	UINT32 CompleteStatus;
}
Struct BTHPORT_EVENT_SET_DEVICE_POWER_STATE_START = FormatString("RM_SET_DEVICE_POWER_START")
{
	UINT32 SystemPowerState = BTHPORT_SYSTEM_POWER_STATE(this);
	UINT32 DevicePowerState = BTHPORT_DEVICE_POWER_STATE(this);
}
Struct BTHPORT_EVENT_SET_DEVICE_POWER_STATE_STOP = FormatString("RM_SET_DEVICE_POWER_STOP")
{
	UINT32 SystemPowerState = BTHPORT_SYSTEM_POWER_STATE(this);
	UINT32 DevicePowerState = BTHPORT_DEVICE_POWER_STATE(this);
	UINT32 CompleteStatus;
}
struct BTHPORT_Link_Key_Write_Stored_Link_Key //Array Struct
{
	UINT8 BD_ADDR[6];
	UINT8 BTH_LINK_KEY_LENGTH;
	UINT8 Link_Key[BTH_LINK_KEY_LENGTH];
}
struct BTHPORT_Value_Completed_Packets //Array Struct
{
	UINT16 Connection_Handle;
	UINT8 Host_Num_Of_Completed_Packets;
}
struct BTHPORT_Value_Write_Current_IAC_LAP //Array Struct
{
	UINT8 BTH_LAP_SIZE;
	UINT8 IAC_LAP[BTH_LAP_SIZE];
}
struct BTHPORT_Result_InquiryResult //Array Struct
{
	UINT8 BD_ADDR[6];
	UINT8 Page_Scan_Repetition_Mode;
	UINT8 Page_Scan_Period_Mode;
	UINT8 Page_Scan_Mode;
	UINT8 Class_Of_Device[3];
	UINT16 Clock_Offset;
}
struct BTHPORT_Result_CompletedPackets //Array Struct
{
	UINT16 Connection_Handle;
	UINT16 HC_Num_Completed_Packets;
}
struct BTHPORT_Result_ReturnLinkKeys //Array Struct
{
	UINT8 BD_ADDR[6];
	UINT8 BTH_LINK_KEY_LENGTH;
	UINT8 LinkKey[BTH_LINK_KEY_LENGTH];
}
struct BTHPORT_Result_InquiryResultWithRSSI //Array Struct
{
	UINT8 BD_ADDR[6];
	UINT8 Page_Scan_Repetition_Mode;
	UINT8 Reserved;
	UINT8 Class_Of_Device[3];
	UINT16 Clock_Offset;
	INT8 RSSI;
}
struct BTHPORT_Result_EIR //Array Struct
{
	UINT8 BD_ADDR[6];
	UINT8 Page_Scan_Repetition_Mode;
	UINT8 Reserved;
	UINT8 Class_Of_Device[3];
	UINT16 Clock_Offset;
	INT8 RSSI;
	UINT8 Extended_Inquiry_Response[240];
}
struct BTHPORT_Result_Read_Current_IAC_LAP //Array Struct
{
	UINT8 BTH_LAP_SIZE;
	UINT8 IAC_LAP[BTH_LAP_SIZE];
}
struct BTHPORT_ConfigOut_ExtraOptions_Open_Channel //Array Struct
{
	UINT8 Type;
	UINT8 Length;
	UINT64 DynamicBuffer;
	UINT8 FixedBuffer[4];
	UINT16 Flags;
}
[RegisterBefore(EventDescriptor.DefaultKeyword, MicrosoftWindowsBTHBTHPORT_Keyword, "{8A1F9517-3A8C-4a9e-A018-4F17A200F277}")]
struct BTHPORT_MicrosoftWindowsBTHBTHPORT_Keyword
{
	UINT64 Performance:1 = FormatString("(%s) %s", this.ToBitString, this? "L2CAP_ETW_KEYWORD_PERFORMANCE":"");
	UINT64 Reserved1:63 = FormatString("  (%s)", this.ToBitString);
}
