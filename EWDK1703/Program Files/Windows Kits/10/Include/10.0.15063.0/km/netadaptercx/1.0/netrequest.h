/*++

Copyright (c) Microsoft Corporation.  All rights reserved.

Module Name:

    NetRequest.h

Abstract:

    This is the interfaces for the NetAdapter

Environment:

    kernel mode only

Revision History:

--*/

//
// NOTE: This header is generated by stubwork.  Please make any 
//       modifications to the corresponding template files 
//       (.x or .y) and use stubwork to regenerate the header
//

#ifndef _NETREQUEST_H_
#define _NETREQUEST_H_

#ifndef WDF_EXTERN_C
  #ifdef __cplusplus
    #define WDF_EXTERN_C       extern "C"
    #define WDF_EXTERN_C_START extern "C" {
    #define WDF_EXTERN_C_END   }
  #else
    #define WDF_EXTERN_C
    #define WDF_EXTERN_C_START
    #define WDF_EXTERN_C_END
  #endif
#endif

WDF_EXTERN_C_START




//
// NET Function: NetRequestRetrieveInputOutputBuffer
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
NTSTATUS
(*PFN_NETREQUESTRETRIEVEINPUTOUTPUTBUFFER)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request,
    _In_
    UINT MininumInputLengthRequired,
    _In_
    UINT MininumOutputLengthRequired,
    _Outptr_result_bytebuffer_(max(*InputBufferLength,*OutputBufferLength))
    PVOID* InputOutputBuffer,
    _Out_opt_
    PUINT InputBufferLength,
    _Out_opt_
    PUINT OutputBufferLength
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
NTSTATUS
FORCEINLINE
NetRequestRetrieveInputOutputBuffer(
    _In_
    NETREQUEST Request,
    _In_
    UINT MininumInputLengthRequired,
    _In_
    UINT MininumOutputLengthRequired,
    _Outptr_result_bytebuffer_(max(*InputBufferLength,*OutputBufferLength))
    PVOID* InputOutputBuffer,
    _Out_opt_
    PUINT InputBufferLength,
    _Out_opt_
    PUINT OutputBufferLength
    )
{
    return ((PFN_NETREQUESTRETRIEVEINPUTOUTPUTBUFFER) NetFunctions[NetRequestRetrieveInputOutputBufferTableIndex])(NetDriverGlobals, Request, MininumInputLengthRequired, MininumOutputLengthRequired, InputOutputBuffer, InputBufferLength, OutputBufferLength);
}

//
// NET Function: NetRequestWdmGetNdisOidRequest
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
PNDIS_OID_REQUEST
(*PFN_NETREQUESTWDMGETNDISOIDREQUEST)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
PNDIS_OID_REQUEST
FORCEINLINE
NetRequestWdmGetNdisOidRequest(
    _In_
    NETREQUEST Request
    )
{
    return ((PFN_NETREQUESTWDMGETNDISOIDREQUEST) NetFunctions[NetRequestWdmGetNdisOidRequestTableIndex])(NetDriverGlobals, Request);
}

//
// NET Function: NetRequestCompleteWithoutInformation
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(*PFN_NETREQUESTCOMPLETEWITHOUTINFORMATION)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
FORCEINLINE
NetRequestCompleteWithoutInformation(
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus
    )
{
    ((PFN_NETREQUESTCOMPLETEWITHOUTINFORMATION) NetFunctions[NetRequestCompleteWithoutInformationTableIndex])(NetDriverGlobals, Request, CompletionStatus);
}

//
// NET Function: NetRequestSetDataComplete
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(*PFN_NETREQUESTSETDATACOMPLETE)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus,
    _In_
    UINT BytesRead
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
FORCEINLINE
NetRequestSetDataComplete(
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus,
    _In_
    UINT BytesRead
    )
{
    ((PFN_NETREQUESTSETDATACOMPLETE) NetFunctions[NetRequestSetDataCompleteTableIndex])(NetDriverGlobals, Request, CompletionStatus, BytesRead);
}

//
// NET Function: NetRequestQueryDataComplete
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(*PFN_NETREQUESTQUERYDATACOMPLETE)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus,
    _In_
    UINT BytesWritten
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
FORCEINLINE
NetRequestQueryDataComplete(
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus,
    _In_
    UINT BytesWritten
    )
{
    ((PFN_NETREQUESTQUERYDATACOMPLETE) NetFunctions[NetRequestQueryDataCompleteTableIndex])(NetDriverGlobals, Request, CompletionStatus, BytesWritten);
}

//
// NET Function: NetRequestMethodComplete
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(*PFN_NETREQUESTMETHODCOMPLETE)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus,
    _In_
    UINT BytesRead,
    _In_
    UINT BytesWritten
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
FORCEINLINE
NetRequestMethodComplete(
    _In_
    NETREQUEST Request,
    _In_
    NTSTATUS CompletionStatus,
    _In_
    UINT BytesRead,
    _In_
    UINT BytesWritten
    )
{
    ((PFN_NETREQUESTMETHODCOMPLETE) NetFunctions[NetRequestMethodCompleteTableIndex])(NetDriverGlobals, Request, CompletionStatus, BytesRead, BytesWritten);
}

//
// NET Function: NetRequestSetBytesNeeded
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
VOID
(*PFN_NETREQUESTSETBYTESNEEDED)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request,
    _In_
    UINT BytesNeeded
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
VOID
FORCEINLINE
NetRequestSetBytesNeeded(
    _In_
    NETREQUEST Request,
    _In_
    UINT BytesNeeded
    )
{
    ((PFN_NETREQUESTSETBYTESNEEDED) NetFunctions[NetRequestSetBytesNeededTableIndex])(NetDriverGlobals, Request, BytesNeeded);
}

//
// NET Function: NetRequestGetId
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
NDIS_OID
(*PFN_NETREQUESTGETID)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
NDIS_OID
FORCEINLINE
NetRequestGetId(
    _In_
    NETREQUEST Request
    )
{
    return ((PFN_NETREQUESTGETID) NetFunctions[NetRequestGetIdTableIndex])(NetDriverGlobals, Request);
}

//
// NET Function: NetRequestGetPortNumber
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
NDIS_PORT_NUMBER
(*PFN_NETREQUESTGETPORTNUMBER)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
NDIS_PORT_NUMBER
FORCEINLINE
NetRequestGetPortNumber(
    _In_
    NETREQUEST Request
    )
{
    return ((PFN_NETREQUESTGETPORTNUMBER) NetFunctions[NetRequestGetPortNumberTableIndex])(NetDriverGlobals, Request);
}

//
// NET Function: NetRequestGetSwitchId
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
NDIS_NIC_SWITCH_ID
(*PFN_NETREQUESTGETSWITCHID)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
NDIS_NIC_SWITCH_ID
FORCEINLINE
NetRequestGetSwitchId(
    _In_
    NETREQUEST Request
    )
{
    return ((PFN_NETREQUESTGETSWITCHID) NetFunctions[NetRequestGetSwitchIdTableIndex])(NetDriverGlobals, Request);
}

//
// NET Function: NetRequestGetVPortId
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
NDIS_NIC_SWITCH_VPORT_ID
(*PFN_NETREQUESTGETVPORTID)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
NDIS_NIC_SWITCH_VPORT_ID
FORCEINLINE
NetRequestGetVPortId(
    _In_
    NETREQUEST Request
    )
{
    return ((PFN_NETREQUESTGETVPORTID) NetFunctions[NetRequestGetVPortIdTableIndex])(NetDriverGlobals, Request);
}

//
// NET Function: NetRequestGetType
//
typedef
_IRQL_requires_max_(DISPATCH_LEVEL)
WDFAPI
NDIS_REQUEST_TYPE
(*PFN_NETREQUESTGETTYPE)(
    _In_
    PNET_DRIVER_GLOBALS DriverGlobals,
    _In_
    NETREQUEST Request
    );

_IRQL_requires_max_(DISPATCH_LEVEL)
NDIS_REQUEST_TYPE
FORCEINLINE
NetRequestGetType(
    _In_
    NETREQUEST Request
    )
{
    return ((PFN_NETREQUESTGETTYPE) NetFunctions[NetRequestGetTypeTableIndex])(NetDriverGlobals, Request);
}



WDF_EXTERN_C_END

#endif // _NETREQUEST_H_

